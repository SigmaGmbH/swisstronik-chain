#!/bin/bash

# This script is to deploy ComplianceProxy contract for ComplianceBridge unit test under `tests/solidity`.
# ComplianceProxy is an example of issuer contract which needs to be added and verified before verifying users.
#
# Steps:
# - Deploy ComplianceProxy contract with `alice` wallet by sending raw tx bytes, `alice` must have nonce 1
# - Get the deployed contract address and use it as issuer address
# - Add new issuer for testing with dummy data by `operator` and set its verification status

HOMEDIR=~/.swisstronik
KEYRING="test"

set -e

function wait_for_tx () {
    echo -e "\nWaiting for sync tx...\n"
    sleep 3 # wait 3 seconds
}

# Deploy ComplianceProxy contract and get transaction hash
echo -e "\nStep 1"
echo "Deploying ComplianceProxy contract..."
RAW_BYTES=0x02f9150182050b018459682f00845da695e28312191a8080b914a6608060405234801561001057600080fd5b50611486806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80636be006d41461005c57806395183eb71461008c578063ace417e0146100bc578063d832c2f0146100ec578063d916d4e21461011c575b600080fd5b61007660048036038101906100719190610707565b61013a565b60405161008391906107c4565b60405180910390f35b6100a660048036038101906100a19190610707565b61038c565b6040516100b39190610a3a565b60405180910390f35b6100d660048036038101906100d19190610707565b610484565b6040516100e39190610a77565b60405180910390f35b61010660048036038101906101019190610bda565b61058c565b6040516101139190610a77565b60405180910390f35b610124610690565b6040516101319190610c45565b60405180910390f35b60606000600167ffffffffffffffff81111561015957610158610a97565b5b6040519080825280601f01601f19166020018201604052801561018b5781602001600182028036833780820191505090505b50905060006040518060400160405280600c81526020017f636861696e5f313239312d310000000000000000000000000000000000000000815250905060006040518060400160405280600681526020017f736368656d610000000000000000000000000000000000000000000000000000815250905060006040518060400160405280601481526020017f697373756572566572696669636174696f6e4964000000000000000000000000815250905060008087856002640100000000426102549190610c99565b60008a89898960405160240161027299989796959493929190610d68565b60405160208183030381529060405263e62364ab60e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008061040473ffffffffffffffffffffffffffffffffffffffff16836040516102e39190610e4d565b6000604051808303816000865af19150503d8060008114610320576040519150601f19603f3d011682016040523d82523d6000602084013e610325565b606091505b50915091506000818060200190518101906103409190610f0a565b90507f109923c5f814b7944f9591557d6a8d1dde907b5cc4cebccf84d59959347589bc8382604051610373929190610f53565b60405180910390a1809950505050505050505050919050565b6060600082306040516024016103a3929190610f83565b60405160208183030381529060405263cc8995ec60e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008061040473ffffffffffffffffffffffffffffffffffffffff16836040516104149190610e4d565b600060405180830381855afa9150503d806000811461044f576040519150601f19603f3d011682016040523d82523d6000602084013e610454565b606091505b509150915060608215610478578180602001905181019061047591906112b3565b90505b80945050505050919050565b6000606060008360026000846040516024016104a394939291906113ab565b604051602081830303815290604052634887fcd860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008061040473ffffffffffffffffffffffffffffffffffffffff16836040516105149190610e4d565b600060405180830381855afa9150503d806000811461054f576040519150601f19603f3d011682016040523d82523d6000602084013e610554565b606091505b5091509150811561057e57808060200190518101906105739190611423565b945050505050610587565b60009450505050505b919050565b6000808360026000856040516024016105a894939291906113ab565b604051602081830303815290604052634887fcd860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008061040473ffffffffffffffffffffffffffffffffffffffff16836040516106199190610e4d565b600060405180830381855afa9150503d8060008114610654576040519150601f19603f3d011682016040523d82523d6000602084013e610659565b606091505b5091509150811561068257808060200190518101906106789190611423565b935050505061068a565b600093505050505b92915050565b600281565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106d4826106a9565b9050919050565b6106e4816106c9565b81146106ef57600080fd5b50565b600081359050610701816106db565b92915050565b60006020828403121561071d5761071c61069f565b5b600061072b848285016106f2565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561076e578082015181840152602081019050610753565b60008484015250505050565b6000601f19601f8301169050919050565b600061079682610734565b6107a0818561073f565b93506107b0818560208601610750565b6107b98161077a565b840191505092915050565b600060208201905081810360008301526107de818461078b565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61081b816106c9565b82525050565b600081519050919050565b600082825260208201905092915050565b600061084882610821565b610852818561082c565b9350610862818560208601610750565b61086b8161077a565b840191505092915050565b600063ffffffff82169050919050565b61088f81610876565b82525050565b600082825260208201905092915050565b60006108b182610734565b6108bb8185610895565b93506108cb818560208601610750565b6108d48161077a565b840191505092915050565b6000610100830160008301516108f86000860182610812565b5060208301518482036020860152610910828261083d565b91505060408301516109256040860182610886565b5060608301516109386060860182610886565b506080830151848203608086015261095082826108a6565b91505060a083015184820360a086015261096a828261083d565b91505060c083015184820360c0860152610984828261083d565b91505060e083015161099960e0860182610886565b508091505092915050565b60006109b083836108df565b905092915050565b6000602082019050919050565b60006109d0826107e6565b6109da81856107f1565b9350836020820285016109ec85610802565b8060005b85811015610a285784840389528151610a0985826109a4565b9450610a14836109b8565b925060208a019950506001810190506109f0565b50829750879550505050505092915050565b60006020820190508181036000830152610a5481846109c5565b905092915050565b60008115159050919050565b610a7181610a5c565b82525050565b6000602082019050610a8c6000830184610a68565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610acf8261077a565b810181811067ffffffffffffffff82111715610aee57610aed610a97565b5b80604052505050565b6000610b01610695565b9050610b0d8282610ac6565b919050565b600067ffffffffffffffff821115610b2d57610b2c610a97565b5b602082029050602081019050919050565b600080fd5b6000610b56610b5184610b12565b610af7565b90508083825260208201905060208402830185811115610b7957610b78610b3e565b5b835b81811015610ba25780610b8e88826106f2565b845260208401935050602081019050610b7b565b5050509392505050565b600082601f830112610bc157610bc0610a92565b5b8135610bd1848260208601610b43565b91505092915050565b60008060408385031215610bf157610bf061069f565b5b6000610bff858286016106f2565b925050602083013567ffffffffffffffff811115610c2057610c1f6106a4565b5b610c2c85828601610bac565b9150509250929050565b610c3f81610876565b82525050565b6000602082019050610c5a6000830184610c36565b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ca482610c60565b9150610caf83610c60565b925082610cbf57610cbe610c6a565b5b828206905092915050565b610cd3816106c9565b82525050565b600082825260208201905092915050565b6000610cf582610821565b610cff8185610cd9565b9350610d0f818560208601610750565b610d188161077a565b840191505092915050565b6000819050919050565b6000819050919050565b6000610d52610d4d610d4884610d23565b610d2d565b610876565b9050919050565b610d6281610d37565b82525050565b600061012082019050610d7e600083018c610cca565b8181036020830152610d90818b610cea565b9050610d9f604083018a610c36565b610dac6060830189610c36565b610db96080830188610d59565b81810360a0830152610dcb818761078b565b905081810360c0830152610ddf8186610cea565b905081810360e0830152610df38185610cea565b9050610e03610100830184610c36565b9a9950505050505050505050565b600081905092915050565b6000610e2782610734565b610e318185610e11565b9350610e41818560208601610750565b80840191505092915050565b6000610e598284610e1c565b915081905092915050565b600080fd5b600067ffffffffffffffff821115610e8457610e83610a97565b5b610e8d8261077a565b9050602081019050919050565b6000610ead610ea884610e69565b610af7565b905082815260208101848484011115610ec957610ec8610e64565b5b610ed4848285610750565b509392505050565b600082601f830112610ef157610ef0610a92565b5b8151610f01848260208601610e9a565b91505092915050565b600060208284031215610f2057610f1f61069f565b5b600082015167ffffffffffffffff811115610f3e57610f3d6106a4565b5b610f4a84828501610edc565b91505092915050565b6000604082019050610f686000830185610a68565b8181036020830152610f7a818461078b565b90509392505050565b6000604082019050610f986000830185610cca565b610fa56020830184610cca565b9392505050565b600067ffffffffffffffff821115610fc757610fc6610a97565b5b602082029050602081019050919050565b600080fd5b600080fd5b600081519050610ff1816106db565b92915050565b600067ffffffffffffffff82111561101257611011610a97565b5b61101b8261077a565b9050602081019050919050565b600061103b61103684610ff7565b610af7565b90508281526020810184848401111561105757611056610e64565b5b611062848285610750565b509392505050565b600082601f83011261107f5761107e610a92565b5b815161108f848260208601611028565b91505092915050565b6110a181610876565b81146110ac57600080fd5b50565b6000815190506110be81611098565b92915050565b600061010082840312156110db576110da610fd8565b5b6110e6610100610af7565b905060006110f684828501610fe2565b600083015250602082015167ffffffffffffffff81111561111a57611119610fdd565b5b6111268482850161106a565b602083015250604061113a848285016110af565b604083015250606061114e848285016110af565b606083015250608082015167ffffffffffffffff81111561117257611171610fdd565b5b61117e84828501610edc565b60808301525060a082015167ffffffffffffffff8111156111a2576111a1610fdd565b5b6111ae8482850161106a565b60a08301525060c082015167ffffffffffffffff8111156111d2576111d1610fdd565b5b6111de8482850161106a565b60c08301525060e06111f2848285016110af565b60e08301525092915050565b600061121161120c84610fac565b610af7565b9050808382526020820190506020840283018581111561123457611233610b3e565b5b835b8181101561127b57805167ffffffffffffffff81111561125957611258610a92565b5b80860161126689826110c4565b85526020850194505050602081019050611236565b5050509392505050565b600082601f83011261129a57611299610a92565b5b81516112aa8482602086016111fe565b91505092915050565b6000602082840312156112c9576112c861069f565b5b600082015167ffffffffffffffff8111156112e7576112e66106a4565b5b6112f384828501611285565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006113348383610812565b60208301905092915050565b6000602082019050919050565b6000611358826112fc565b6113628185611307565b935061136d83611318565b8060005b8381101561139e5781516113858882611328565b975061139083611340565b925050600181019050611371565b5085935050505092915050565b60006080820190506113c06000830187610cca565b6113cd6020830186610c36565b6113da6040830185610d59565b81810360608301526113ec818461134d565b905095945050505050565b61140081610a5c565b811461140b57600080fd5b50565b60008151905061141d816113f7565b92915050565b6000602082840312156114395761143861069f565b5b60006114478482850161140e565b9150509291505056fea26469706673582212208e9af41c998cc88ea213711d8bf7923a94533928ba267b66a6f440e8431329c864736f6c63430008110033c080a090bfcd1dec9917ae667407a7ffed01f36a17befc2617b46911569dc1be14dea9a05b72aad2223e035e5b915248d4582caf9c34f7c17160e6e60c136cf9d4d60625
TXHASH=$(swisstronikd tx evm raw $RAW_BYTES -y --from alice --keyring-backend $KEYRING --home $HOMEDIR --gas-prices 1000000aswtr --output json | jq -r '.txhash')
wait_for_tx
echo "txHash: $TXHASH"

# Get ethereum transaction hash
ETH_TXHASH=$(swisstronikd query tx $TXHASH --output json | jq -r '.events[] | select(.type == "ethereum_tx") | .attributes[] | select(.key == "ethereumTxHash") | .value' | head -n 1)
echo "Ethereum txHash: $ETH_TXHASH"

# Get deployed contract address
echo -e "\nStep 2"
echo -e "\nSending transaction receipt to get deployed contract address..."
ISSUER=$(curl -s -X POST --data '{"jsonrpc":"2.0","method":"eth_getTransactionReceipt","params":["'"$ETH_TXHASH"'"],"id":1}' -H "Content-Type: application/json" http://localhost:8545 | jq -r '.result.contractAddress')
echo "Contract Address: $ISSUER"

# Add new issuer address for testing
echo -e "\nNew Issuer Address for testing: $ISSUER"
echo -e "\nStep 3"
echo "Adding new issuer..."
swisstronikd tx compliance set-issuer-details $ISSUER issuer-name issuer-description issuer-url issuer-logo issuer-legal-entity -y --from operator --keyring-backend $KEYRING --home $HOMEDIR --gas-prices 100000000aswtr --output json | tail -n 1 | jq -r '.txhash'
wait_for_tx
echo -e "\nSet verification status for new issuer..."
swisstronikd tx compliance set-issuer-verification $ISSUER true -y --from operator --keyring-backend $KEYRING --home $HOMEDIR --gas-prices 100000000aswtr --output json | tail -n 1 | jq -r '.txhash'
wait_for_tx

echo -e "\n\n##########################\n"
echo "Now you are ready to run unit test with the following command: npm run test:tronik"