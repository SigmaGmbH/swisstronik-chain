#!/bin/bash

# This script is to deploy ComplianceProxy contract for ComplianceBridge unit test under `tests/solidity`.
# ComplianceProxy is an example of issuer contract which needs to be added and verified before verifying users.
#
# Steps:
# - Deploy ComplianceProxy contract with `alice` wallet by sending raw tx bytes, `alice` must have nonce 1
# - Get the deployed contract address and use it as issuer address
# - Add new issuer for testing with dummy data by `operator` and set its verification status

HOMEDIR=~/.swisstronik
KEYRING="test"

set -e

function wait_for_tx () {
    echo -e "\nWaiting for sync tx...\n"
    sleep 3 # wait 3 seconds
}

# Deploy ComplianceProxy contract and get transaction hash
echo -e "\nStep 1"
echo "Deploying ComplianceProxy contract..."
RAW_BYTES=0x02f9157a82050b018459682f008459684ae683127f3a8080b9151f608060405234801561001057600080fd5b506114ff806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80636be006d41461005c57806395183eb71461008c578063ace417e0146100bc578063d832c2f0146100ec578063d916d4e21461011c575b600080fd5b61007660048036038101906100719190610707565b61013a565b60405161008391906107c4565b60405180910390f35b6100a660048036038101906100a19190610707565b61038c565b6040516100b39190610a6b565b60405180910390f35b6100d660048036038101906100d19190610707565b610484565b6040516100e39190610aa8565b60405180910390f35b61010660048036038101906101019190610c0b565b61058c565b6040516101139190610aa8565b60405180910390f35b610124610690565b6040516101319190610c76565b60405180910390f35b60606000600167ffffffffffffffff81111561015957610158610ac8565b5b6040519080825280601f01601f19166020018201604052801561018b5781602001600182028036833780820191505090505b50905060006040518060400160405280600c81526020017f636861696e5f313239312d310000000000000000000000000000000000000000815250905060006040518060400160405280600681526020017f736368656d610000000000000000000000000000000000000000000000000000815250905060006040518060400160405280601481526020017f697373756572566572696669636174696f6e4964000000000000000000000000815250905060008087856002640100000000426102549190610cca565b60008a89898960405160240161027299989796959493929190610d99565b60405160208183030381529060405263e62364ab60e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008061040473ffffffffffffffffffffffffffffffffffffffff16836040516102e39190610e7e565b6000604051808303816000865af19150503d8060008114610320576040519150601f19603f3d011682016040523d82523d6000602084013e610325565b606091505b50915091506000818060200190518101906103409190610f3b565b90507f109923c5f814b7944f9591557d6a8d1dde907b5cc4cebccf84d59959347589bc8382604051610373929190610f84565b60405180910390a1809950505050505050505050919050565b6060600082306040516024016103a3929190610fb4565b60405160208183030381529060405263cc8995ec60e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008061040473ffffffffffffffffffffffffffffffffffffffff16836040516104149190610e7e565b600060405180830381855afa9150503d806000811461044f576040519150601f19603f3d011682016040523d82523d6000602084013e610454565b606091505b5091509150606082156104785781806020019051810190610475919061132c565b90505b80945050505050919050565b6000606060008360026000846040516024016104a39493929190611424565b604051602081830303815290604052634887fcd860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008061040473ffffffffffffffffffffffffffffffffffffffff16836040516105149190610e7e565b600060405180830381855afa9150503d806000811461054f576040519150601f19603f3d011682016040523d82523d6000602084013e610554565b606091505b5091509150811561057e5780806020019051810190610573919061149c565b945050505050610587565b60009450505050505b919050565b6000808360026000856040516024016105a89493929190611424565b604051602081830303815290604052634887fcd860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008061040473ffffffffffffffffffffffffffffffffffffffff16836040516106199190610e7e565b600060405180830381855afa9150503d8060008114610654576040519150601f19603f3d011682016040523d82523d6000602084013e610659565b606091505b509150915081156106825780806020019051810190610678919061149c565b935050505061068a565b600093505050505b92915050565b600281565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106d4826106a9565b9050919050565b6106e4816106c9565b81146106ef57600080fd5b50565b600081359050610701816106db565b92915050565b60006020828403121561071d5761071c61069f565b5b600061072b848285016106f2565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561076e578082015181840152602081019050610753565b60008484015250505050565b6000601f19601f8301169050919050565b600061079682610734565b6107a0818561073f565b93506107b0818560208601610750565b6107b98161077a565b840191505092915050565b600060208201905081810360008301526107de818461078b565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600063ffffffff82169050919050565b61082b81610812565b82525050565b600082825260208201905092915050565b600061084d82610734565b6108578185610831565b9350610867818560208601610750565b6108708161077a565b840191505092915050565b610884816106c9565b82525050565b600081519050919050565b600082825260208201905092915050565b60006108b18261088a565b6108bb8185610895565b93506108cb818560208601610750565b6108d48161077a565b840191505092915050565b6000610140830160008301516108f86000860182610822565b50602083015184820360208601526109108282610842565b9150506040830151610925604086018261087b565b506060830151848203606086015261093d82826108a6565b91505060808301516109526080860182610822565b5060a083015161096560a0860182610822565b5060c083015184820360c086015261097d8282610842565b91505060e083015184820360e086015261099782826108a6565b9150506101008301518482036101008601526109b382826108a6565b9150506101208301516109ca610120860182610822565b508091505092915050565b60006109e183836108df565b905092915050565b6000602082019050919050565b6000610a01826107e6565b610a0b81856107f1565b935083602082028501610a1d85610802565b8060005b85811015610a595784840389528151610a3a85826109d5565b9450610a45836109e9565b925060208a01995050600181019050610a21565b50829750879550505050505092915050565b60006020820190508181036000830152610a8581846109f6565b905092915050565b60008115159050919050565b610aa281610a8d565b82525050565b6000602082019050610abd6000830184610a99565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b008261077a565b810181811067ffffffffffffffff82111715610b1f57610b1e610ac8565b5b80604052505050565b6000610b32610695565b9050610b3e8282610af7565b919050565b600067ffffffffffffffff821115610b5e57610b5d610ac8565b5b602082029050602081019050919050565b600080fd5b6000610b87610b8284610b43565b610b28565b90508083825260208201905060208402830185811115610baa57610ba9610b6f565b5b835b81811015610bd35780610bbf88826106f2565b845260208401935050602081019050610bac565b5050509392505050565b600082601f830112610bf257610bf1610ac3565b5b8135610c02848260208601610b74565b91505092915050565b60008060408385031215610c2257610c2161069f565b5b6000610c30858286016106f2565b925050602083013567ffffffffffffffff811115610c5157610c506106a4565b5b610c5d85828601610bdd565b9150509250929050565b610c7081610812565b82525050565b6000602082019050610c8b6000830184610c67565b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cd582610c91565b9150610ce083610c91565b925082610cf057610cef610c9b565b5b828206905092915050565b610d04816106c9565b82525050565b600082825260208201905092915050565b6000610d268261088a565b610d308185610d0a565b9350610d40818560208601610750565b610d498161077a565b840191505092915050565b6000819050919050565b6000819050919050565b6000610d83610d7e610d7984610d54565b610d5e565b610812565b9050919050565b610d9381610d68565b82525050565b600061012082019050610daf600083018c610cfb565b8181036020830152610dc1818b610d1b565b9050610dd0604083018a610c67565b610ddd6060830189610c67565b610dea6080830188610d8a565b81810360a0830152610dfc818761078b565b905081810360c0830152610e108186610d1b565b905081810360e0830152610e248185610d1b565b9050610e34610100830184610c67565b9a9950505050505050505050565b600081905092915050565b6000610e5882610734565b610e628185610e42565b9350610e72818560208601610750565b80840191505092915050565b6000610e8a8284610e4d565b915081905092915050565b600080fd5b600067ffffffffffffffff821115610eb557610eb4610ac8565b5b610ebe8261077a565b9050602081019050919050565b6000610ede610ed984610e9a565b610b28565b905082815260208101848484011115610efa57610ef9610e95565b5b610f05848285610750565b509392505050565b600082601f830112610f2257610f21610ac3565b5b8151610f32848260208601610ecb565b91505092915050565b600060208284031215610f5157610f5061069f565b5b600082015167ffffffffffffffff811115610f6f57610f6e6106a4565b5b610f7b84828501610f0d565b91505092915050565b6000604082019050610f996000830185610a99565b8181036020830152610fab818461078b565b90509392505050565b6000604082019050610fc96000830185610cfb565b610fd66020830184610cfb565b9392505050565b600067ffffffffffffffff821115610ff857610ff7610ac8565b5b602082029050602081019050919050565b600080fd5b600080fd5b61101c81610812565b811461102757600080fd5b50565b60008151905061103981611013565b92915050565b60008151905061104e816106db565b92915050565b600067ffffffffffffffff82111561106f5761106e610ac8565b5b6110788261077a565b9050602081019050919050565b600061109861109384611054565b610b28565b9050828152602081018484840111156110b4576110b3610e95565b5b6110bf848285610750565b509392505050565b600082601f8301126110dc576110db610ac3565b5b81516110ec848260208601611085565b91505092915050565b6000610140828403121561110c5761110b611009565b5b611117610140610b28565b905060006111278482850161102a565b600083015250602082015167ffffffffffffffff81111561114b5761114a61100e565b5b61115784828501610f0d565b602083015250604061116b8482850161103f565b604083015250606082015167ffffffffffffffff81111561118f5761118e61100e565b5b61119b848285016110c7565b60608301525060806111af8482850161102a565b60808301525060a06111c38482850161102a565b60a08301525060c082015167ffffffffffffffff8111156111e7576111e661100e565b5b6111f384828501610f0d565b60c08301525060e082015167ffffffffffffffff8111156112175761121661100e565b5b611223848285016110c7565b60e08301525061010082015167ffffffffffffffff8111156112485761124761100e565b5b611254848285016110c7565b6101008301525061012061126a8482850161102a565b6101208301525092915050565b600061128a61128584610fdd565b610b28565b905080838252602082019050602084028301858111156112ad576112ac610b6f565b5b835b818110156112f457805167ffffffffffffffff8111156112d2576112d1610ac3565b5b8086016112df89826110f5565b855260208501945050506020810190506112af565b5050509392505050565b600082601f83011261131357611312610ac3565b5b8151611323848260208601611277565b91505092915050565b6000602082840312156113425761134161069f565b5b600082015167ffffffffffffffff8111156113605761135f6106a4565b5b61136c848285016112fe565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006113ad838361087b565b60208301905092915050565b6000602082019050919050565b60006113d182611375565b6113db8185611380565b93506113e683611391565b8060005b838110156114175781516113fe88826113a1565b9750611409836113b9565b9250506001810190506113ea565b5085935050505092915050565b60006080820190506114396000830187610cfb565b6114466020830186610c67565b6114536040830185610d8a565b818103606083015261146581846113c6565b905095945050505050565b61147981610a8d565b811461148457600080fd5b50565b60008151905061149681611470565b92915050565b6000602082840312156114b2576114b161069f565b5b60006114c084828501611487565b9150509291505056fea26469706673582212208c7fd0ce6ba0690e30f96631c2c085c2b909ace64f9154ffa18b7943df8e856a64736f6c63430008110033c001a07f070587bc30b54a46853ab2725039b8b273176daadff4cea85fc64c8cb73649a02b076e8de4ce5796d2e41196f9221b7cca37eff80739780e461767cf09c8ca3b
TXHASH=$(swisstronikd tx evm raw $RAW_BYTES -y --from alice --keyring-backend $KEYRING --home $HOMEDIR --gas-prices 100000000aswtr --output json | jq -r '.txhash')
wait_for_tx
echo "txHash: $TXHASH"

# Get ethereum transaction hash
ETH_TXHASH=$(swisstronikd query tx $TXHASH --output json | jq -r '.events[] | select(.type == "ethereum_tx") | .attributes[] | select(.key == "ethereumTxHash") | .value' | head -n 1)
echo "Ethereum txHash: $ETH_TXHASH"

# Get deployed contract address
echo -e "\nStep 2"
echo -e "\nSending transaction receipt to get deployed contract address..."
ISSUER=$(curl -s -X POST --data '{"jsonrpc":"2.0","method":"eth_getTransactionReceipt","params":["'"$ETH_TXHASH"'"],"id":1}' -H "Content-Type: application/json" http://localhost:8545 | jq -r '.result.contractAddress')
echo "Contract Address: $ISSUER"

# Add new issuer address for testing
echo -e "\nNew Issuer Address for testing: $ISSUER"
echo -e "\nStep 3"
echo "Adding new issuer..."
swisstronikd tx compliance create-issuer $ISSUER issuer-name issuer-description issuer-url issuer-logo issuer-legal-entity -y --from operator --keyring-backend $KEYRING --home $HOMEDIR --gas-prices 100000000aswtr --output json | tail -n 1 | jq -r '.txhash'
wait_for_tx
echo -e "\nSet verification status for new issuer..."
swisstronikd tx compliance set-issuer-status $ISSUER true -y --from operator --keyring-backend $KEYRING --home $HOMEDIR --gas-prices 100000000aswtr --output json | tail -n 1 | jq -r '.txhash'
wait_for_tx

echo -e "\n\n##########################\n"
echo "Now you are ready to run unit test with the following command: npm run test:tronik"