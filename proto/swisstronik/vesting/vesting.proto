syntax = "proto3";

package swisstronik.vesting;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/vesting/v1beta1/vesting.proto";

option go_package = "swisstronik/x/vesting/types";

// MonthlyVestingAccount implements the VestingAccount interface.
// It continuously vests by unlocking coins after cliff period linear monthly
// when vesting starts.
message MonthlyVestingAccount {
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  // base_vesting_account implements the VestingAccount interface. It contains
  // all the necessary fields needed for any base vesting account implementation
  cosmos.vesting.v1beta1.BaseVestingAccount base_vesting_account = 1 [(gogoproto.embed) = true];

  // start_time defines the time at which the vesting period begins
  int64 start_time = 2;
  // cliff_time defines the time at which linear monthly vesting starts.
  int64 cliff_time = 3;
  repeated cosmos.vesting.v1beta1.Period vesting_periods = 4 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}