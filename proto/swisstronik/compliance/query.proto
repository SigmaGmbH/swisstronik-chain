syntax = "proto3";
package swisstronik.compliance;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "swisstronik/compliance/params.proto";
import "swisstronik/compliance/entities.proto";

option go_package = "swisstronik/x/compliance/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/swisstronik/compliance/params";
  }

  rpc VerificationData(QueryVerificationDataRequest) returns (QueryVerificationDataResponse) {
    option (google.api.http).get = "/swisstronik/compliance/{address}";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

// QueryVerificationDataRequest is request type for the Query/VerificationData RPC method.
message QueryVerificationDataRequest {
  string address = 1;
}

// QueryVerificationDataResponse is response type for the Query/VerificationData RPC method.
message QueryVerificationDataResponse {
  // data holds all the verification data for provided address
  AddressInfo data = 1;
}