syntax = "proto3";
package swisstronik.compliance;

import "gogoproto/gogo.proto";
import "swisstronik/compliance/params.proto";

option go_package = "swisstronik/x/compliance/types";

message BanStatus {
    bool is_banned = 1;
    uint32 timestamp = 2;
    string reference_info = 3;
}

enum VerificationType {
    VT_KYC = 0; // Know Your Custom
    VT_KYB = 1; // Know Your Business
    VT_KYW = 2; // Know Your Wallet
    VT_HUMANITY = 3; // Check humanity
    VT_AML = 4; // Anti Money Laundering (check transactions)
    VT_ADDRESS = 5;
    VT_CUSTOM = 6;
}

message AddressInfo {
    string address = 1;
    // This field is used during community verification of some address.
    // Only smart contract can be verified by community.
    bool is_verified = 2;
    // This field contains information about address ban. Ban can be done
    // only by community decision
    BanStatus ban_data = 3;
    repeated VerificationData verifications = 4;
}

message VerificationData {
    VerificationType verification_type = 1;
    repeated VerificationEntry entries = 2;

}
message VerificationEntry {
    IssuerAdapterContractDetail adapter_data = 1;
    // On which chain verification was passed
    string origin_chain = 2;
    // Original issuance timestamp
    uint32 issuance_timestamp = 3;
    // Original expiration timestamp
    uint32 expiration_timestamp = 4;
    // Original zk proof
    bytes original_data = 5;
}

message IssuerDetails {
    string issuer_alias = 1;
}

message IssuerAdapterContractDetail {
    // Issuer company name
    string issuer_alias = 1;
    // Adapter contract address
    string contract_address = 2;
}

