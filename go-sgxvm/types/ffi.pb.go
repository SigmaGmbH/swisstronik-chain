// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: ffi.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AccessListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageSlot [][]byte `protobuf:"bytes,1,rep,name=storageSlot,proto3" json:"storageSlot,omitempty"`
	Address     []byte   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AccessListItem) Reset() {
	*x = AccessListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessListItem) ProtoMessage() {}

func (x *AccessListItem) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessListItem.ProtoReflect.Descriptor instead.
func (*AccessListItem) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{0}
}

func (x *AccessListItem) GetStorageSlot() [][]byte {
	if x != nil {
		return x.StorageSlot
	}
	return nil
}

func (x *AccessListItem) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type TransactionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From       []byte            `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To         []byte            `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Data       []byte            `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	GasLimit   uint64            `protobuf:"varint,4,opt,name=gasLimit,proto3" json:"gasLimit,omitempty"`
	Value      []byte            `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	AccessList []*AccessListItem `protobuf:"bytes,6,rep,name=accessList,proto3" json:"accessList,omitempty"`
}

func (x *TransactionData) Reset() {
	*x = TransactionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionData) ProtoMessage() {}

func (x *TransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionData.ProtoReflect.Descriptor instead.
func (*TransactionData) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{1}
}

func (x *TransactionData) GetFrom() []byte {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *TransactionData) GetTo() []byte {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *TransactionData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TransactionData) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *TransactionData) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *TransactionData) GetAccessList() []*AccessListItem {
	if x != nil {
		return x.AccessList
	}
	return nil
}

type TransactionContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId            uint64 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	GasPrice           []byte `protobuf:"bytes,2,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	Timestamp          uint64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	BlockGasLimit      uint64 `protobuf:"varint,4,opt,name=block_gas_limit,json=blockGasLimit,proto3" json:"block_gas_limit,omitempty"`
	BlockBaseFeePerGas []byte `protobuf:"bytes,5,opt,name=block_base_fee_per_gas,json=blockBaseFeePerGas,proto3" json:"block_base_fee_per_gas,omitempty"`
	BlockCoinbase      []byte `protobuf:"bytes,6,opt,name=block_coinbase,json=blockCoinbase,proto3" json:"block_coinbase,omitempty"`
	BlockNumber        uint64 `protobuf:"varint,7,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
}

func (x *TransactionContext) Reset() {
	*x = TransactionContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionContext) ProtoMessage() {}

func (x *TransactionContext) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionContext.ProtoReflect.Descriptor instead.
func (*TransactionContext) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{2}
}

func (x *TransactionContext) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *TransactionContext) GetGasPrice() []byte {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

func (x *TransactionContext) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TransactionContext) GetBlockGasLimit() uint64 {
	if x != nil {
		return x.BlockGasLimit
	}
	return 0
}

func (x *TransactionContext) GetBlockBaseFeePerGas() []byte {
	if x != nil {
		return x.BlockBaseFeePerGas
	}
	return nil
}

func (x *TransactionContext) GetBlockCoinbase() []byte {
	if x != nil {
		return x.BlockCoinbase
	}
	return nil
}

func (x *TransactionContext) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

type HandleTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxData    *TransactionData    `protobuf:"bytes,1,opt,name=tx_data,json=txData,proto3" json:"tx_data,omitempty"`
	TxContext *TransactionContext `protobuf:"bytes,2,opt,name=tx_context,json=txContext,proto3" json:"tx_context,omitempty"`
}

func (x *HandleTransactionRequest) Reset() {
	*x = HandleTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleTransactionRequest) ProtoMessage() {}

func (x *HandleTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleTransactionRequest.ProtoReflect.Descriptor instead.
func (*HandleTransactionRequest) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{3}
}

func (x *HandleTransactionRequest) GetTxData() *TransactionData {
	if x != nil {
		return x.TxData
	}
	return nil
}

func (x *HandleTransactionRequest) GetTxContext() *TransactionContext {
	if x != nil {
		return x.TxContext
	}
	return nil
}

type HandleTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// logs contains the transaction hash and the proto-compatible ethereum
	// logs.
	Logs []*Log `protobuf:"bytes,2,rep,name=logs,proto3" json:"logs,omitempty"`
	// returned data from evm function (result or data supplied with revert
	// opcode)
	Ret []byte `protobuf:"bytes,3,opt,name=ret,proto3" json:"ret,omitempty"`
	// vm error is the error returned by vm execution
	VmError string `protobuf:"bytes,4,opt,name=vm_error,json=vmError,proto3" json:"vm_error,omitempty"`
	// gas consumed by the transaction
	GasUsed uint64 `protobuf:"varint,5,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
}

func (x *HandleTransactionResponse) Reset() {
	*x = HandleTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleTransactionResponse) ProtoMessage() {}

func (x *HandleTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleTransactionResponse.ProtoReflect.Descriptor instead.
func (*HandleTransactionResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{4}
}

func (x *HandleTransactionResponse) GetLogs() []*Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *HandleTransactionResponse) GetRet() []byte {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *HandleTransactionResponse) GetVmError() string {
	if x != nil {
		return x.VmError
	}
	return ""
}

func (x *HandleTransactionResponse) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

// Topic represents 32-byte words that is used to describe what’s going on in an
// event
type Topic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner []byte `protobuf:"bytes,1,opt,name=inner,proto3" json:"inner,omitempty"`
}

func (x *Topic) Reset() {
	*x = Topic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Topic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Topic) ProtoMessage() {}

func (x *Topic) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Topic.ProtoReflect.Descriptor instead.
func (*Topic) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{5}
}

func (x *Topic) GetInner() []byte {
	if x != nil {
		return x.Inner
	}
	return nil
}

// Log represents an protobuf compatible Ethereum Log that defines a contract
// log event.
// Copied from `devnet/proto“
type Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// address of the contract that generated the event
	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// list of topics provided by the contract.
	Topics []*Topic `protobuf:"bytes,2,rep,name=topics,proto3" json:"topics,omitempty"`
	// supplied by the contract, usually ABI-encoded
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Log) Reset() {
	*x = Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{6}
}

func (x *Log) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Log) GetTopics() []*Topic {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *Log) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Request for account code (smart contract deployed behind provided address)
type QueryGetAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 20 bytes of account address
	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *QueryGetAccount) Reset() {
	*x = QueryGetAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAccount) ProtoMessage() {}

func (x *QueryGetAccount) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGetAccount.ProtoReflect.Descriptor instead.
func (*QueryGetAccount) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{7}
}

func (x *QueryGetAccount) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

// Response for account code
type QueryGetAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Since both fields are 256-bit unsigned integer, we encode them as
	// big-endian bytes
	Balance []byte `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Nonce   uint64 `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *QueryGetAccountResponse) Reset() {
	*x = QueryGetAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAccountResponse) ProtoMessage() {}

func (x *QueryGetAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGetAccountResponse.ProtoReflect.Descriptor instead.
func (*QueryGetAccountResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{8}
}

func (x *QueryGetAccountResponse) GetBalance() []byte {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *QueryGetAccountResponse) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

type QueryInsertAccountBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Balance []byte `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *QueryInsertAccountBalance) Reset() {
	*x = QueryInsertAccountBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryInsertAccountBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryInsertAccountBalance) ProtoMessage() {}

func (x *QueryInsertAccountBalance) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryInsertAccountBalance.ProtoReflect.Descriptor instead.
func (*QueryInsertAccountBalance) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{9}
}

func (x *QueryInsertAccountBalance) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *QueryInsertAccountBalance) GetBalance() []byte {
	if x != nil {
		return x.Balance
	}
	return nil
}

type QueryInsertAccountBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryInsertAccountBalanceResponse) Reset() {
	*x = QueryInsertAccountBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryInsertAccountBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryInsertAccountBalanceResponse) ProtoMessage() {}

func (x *QueryInsertAccountBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryInsertAccountBalanceResponse.ProtoReflect.Descriptor instead.
func (*QueryInsertAccountBalanceResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{10}
}

type QueryInsertAccountNonce struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Nonce   uint64 `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *QueryInsertAccountNonce) Reset() {
	*x = QueryInsertAccountNonce{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryInsertAccountNonce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryInsertAccountNonce) ProtoMessage() {}

func (x *QueryInsertAccountNonce) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryInsertAccountNonce.ProtoReflect.Descriptor instead.
func (*QueryInsertAccountNonce) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{11}
}

func (x *QueryInsertAccountNonce) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *QueryInsertAccountNonce) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

type QueryInsertAccountNonceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryInsertAccountNonceResponse) Reset() {
	*x = QueryInsertAccountNonceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryInsertAccountNonceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryInsertAccountNonceResponse) ProtoMessage() {}

func (x *QueryInsertAccountNonceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryInsertAccountNonceResponse.ProtoReflect.Descriptor instead.
func (*QueryInsertAccountNonceResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{12}
}

type QueryContainsKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *QueryContainsKey) Reset() {
	*x = QueryContainsKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryContainsKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryContainsKey) ProtoMessage() {}

func (x *QueryContainsKey) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryContainsKey.ProtoReflect.Descriptor instead.
func (*QueryContainsKey) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{13}
}

func (x *QueryContainsKey) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type QueryContainsKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contains bool `protobuf:"varint,1,opt,name=contains,proto3" json:"contains,omitempty"`
}

func (x *QueryContainsKeyResponse) Reset() {
	*x = QueryContainsKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryContainsKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryContainsKeyResponse) ProtoMessage() {}

func (x *QueryContainsKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryContainsKeyResponse.ProtoReflect.Descriptor instead.
func (*QueryContainsKeyResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{14}
}

func (x *QueryContainsKeyResponse) GetContains() bool {
	if x != nil {
		return x.Contains
	}
	return false
}

type QueryGetAccountStorageCell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Index   []byte `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *QueryGetAccountStorageCell) Reset() {
	*x = QueryGetAccountStorageCell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAccountStorageCell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAccountStorageCell) ProtoMessage() {}

func (x *QueryGetAccountStorageCell) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGetAccountStorageCell.ProtoReflect.Descriptor instead.
func (*QueryGetAccountStorageCell) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{15}
}

func (x *QueryGetAccountStorageCell) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *QueryGetAccountStorageCell) GetIndex() []byte {
	if x != nil {
		return x.Index
	}
	return nil
}

type QueryGetAccountStorageCellResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *QueryGetAccountStorageCellResponse) Reset() {
	*x = QueryGetAccountStorageCellResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAccountStorageCellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAccountStorageCellResponse) ProtoMessage() {}

func (x *QueryGetAccountStorageCellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGetAccountStorageCellResponse.ProtoReflect.Descriptor instead.
func (*QueryGetAccountStorageCellResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{16}
}

func (x *QueryGetAccountStorageCellResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type QueryGetAccountCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *QueryGetAccountCode) Reset() {
	*x = QueryGetAccountCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAccountCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAccountCode) ProtoMessage() {}

func (x *QueryGetAccountCode) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGetAccountCode.ProtoReflect.Descriptor instead.
func (*QueryGetAccountCode) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{17}
}

func (x *QueryGetAccountCode) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type QueryGetAccountCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code []byte `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *QueryGetAccountCodeResponse) Reset() {
	*x = QueryGetAccountCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAccountCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAccountCodeResponse) ProtoMessage() {}

func (x *QueryGetAccountCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGetAccountCodeResponse.ProtoReflect.Descriptor instead.
func (*QueryGetAccountCodeResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{18}
}

func (x *QueryGetAccountCodeResponse) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

type QueryGetAccountCodeSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *QueryGetAccountCodeSize) Reset() {
	*x = QueryGetAccountCodeSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAccountCodeSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAccountCodeSize) ProtoMessage() {}

func (x *QueryGetAccountCodeSize) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGetAccountCodeSize.ProtoReflect.Descriptor instead.
func (*QueryGetAccountCodeSize) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{19}
}

func (x *QueryGetAccountCodeSize) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type QueryGetAccountCodeSizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size uint32 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *QueryGetAccountCodeSizeResponse) Reset() {
	*x = QueryGetAccountCodeSizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAccountCodeSizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAccountCodeSizeResponse) ProtoMessage() {}

func (x *QueryGetAccountCodeSizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGetAccountCodeSizeResponse.ProtoReflect.Descriptor instead.
func (*QueryGetAccountCodeSizeResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{20}
}

func (x *QueryGetAccountCodeSizeResponse) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type QueryGetAccountCodeHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *QueryGetAccountCodeHash) Reset() {
	*x = QueryGetAccountCodeHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAccountCodeHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAccountCodeHash) ProtoMessage() {}

func (x *QueryGetAccountCodeHash) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGetAccountCodeHash.ProtoReflect.Descriptor instead.
func (*QueryGetAccountCodeHash) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{21}
}

func (x *QueryGetAccountCodeHash) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type QueryGetAccountCodeHashResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *QueryGetAccountCodeHashResponse) Reset() {
	*x = QueryGetAccountCodeHashResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetAccountCodeHashResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetAccountCodeHashResponse) ProtoMessage() {}

func (x *QueryGetAccountCodeHashResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGetAccountCodeHashResponse.ProtoReflect.Descriptor instead.
func (*QueryGetAccountCodeHashResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{22}
}

func (x *QueryGetAccountCodeHashResponse) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type QueryInsertAccountCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Code    []byte `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *QueryInsertAccountCode) Reset() {
	*x = QueryInsertAccountCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryInsertAccountCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryInsertAccountCode) ProtoMessage() {}

func (x *QueryInsertAccountCode) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryInsertAccountCode.ProtoReflect.Descriptor instead.
func (*QueryInsertAccountCode) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{23}
}

func (x *QueryInsertAccountCode) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *QueryInsertAccountCode) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

type QueryInsertAccountCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryInsertAccountCodeResponse) Reset() {
	*x = QueryInsertAccountCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryInsertAccountCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryInsertAccountCodeResponse) ProtoMessage() {}

func (x *QueryInsertAccountCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryInsertAccountCodeResponse.ProtoReflect.Descriptor instead.
func (*QueryInsertAccountCodeResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{24}
}

type QueryInsertStorageCell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Index   []byte `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Value   []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *QueryInsertStorageCell) Reset() {
	*x = QueryInsertStorageCell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryInsertStorageCell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryInsertStorageCell) ProtoMessage() {}

func (x *QueryInsertStorageCell) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryInsertStorageCell.ProtoReflect.Descriptor instead.
func (*QueryInsertStorageCell) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{25}
}

func (x *QueryInsertStorageCell) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *QueryInsertStorageCell) GetIndex() []byte {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *QueryInsertStorageCell) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type QueryInsertStorageCellResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryInsertStorageCellResponse) Reset() {
	*x = QueryInsertStorageCellResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryInsertStorageCellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryInsertStorageCellResponse) ProtoMessage() {}

func (x *QueryInsertStorageCellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryInsertStorageCellResponse.ProtoReflect.Descriptor instead.
func (*QueryInsertStorageCellResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{26}
}

type QueryRemove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *QueryRemove) Reset() {
	*x = QueryRemove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRemove) ProtoMessage() {}

func (x *QueryRemove) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRemove.ProtoReflect.Descriptor instead.
func (*QueryRemove) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{27}
}

func (x *QueryRemove) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type QueryRemoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryRemoveResponse) Reset() {
	*x = QueryRemoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRemoveResponse) ProtoMessage() {}

func (x *QueryRemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRemoveResponse.ProtoReflect.Descriptor instead.
func (*QueryRemoveResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{28}
}

type QueryRemoveStorageCell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Index   []byte `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *QueryRemoveStorageCell) Reset() {
	*x = QueryRemoveStorageCell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRemoveStorageCell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRemoveStorageCell) ProtoMessage() {}

func (x *QueryRemoveStorageCell) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRemoveStorageCell.ProtoReflect.Descriptor instead.
func (*QueryRemoveStorageCell) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{29}
}

func (x *QueryRemoveStorageCell) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *QueryRemoveStorageCell) GetIndex() []byte {
	if x != nil {
		return x.Index
	}
	return nil
}

type QueryRemoveStorageCellResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryRemoveStorageCellResponse) Reset() {
	*x = QueryRemoveStorageCellResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRemoveStorageCellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRemoveStorageCellResponse) ProtoMessage() {}

func (x *QueryRemoveStorageCellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRemoveStorageCellResponse.ProtoReflect.Descriptor instead.
func (*QueryRemoveStorageCellResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{30}
}

type QueryRemoveStorage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *QueryRemoveStorage) Reset() {
	*x = QueryRemoveStorage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRemoveStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRemoveStorage) ProtoMessage() {}

func (x *QueryRemoveStorage) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRemoveStorage.ProtoReflect.Descriptor instead.
func (*QueryRemoveStorage) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{31}
}

func (x *QueryRemoveStorage) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type QueryRemoveStorageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryRemoveStorageResponse) Reset() {
	*x = QueryRemoveStorageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRemoveStorageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRemoveStorageResponse) ProtoMessage() {}

func (x *QueryRemoveStorageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRemoveStorageResponse.ProtoReflect.Descriptor instead.
func (*QueryRemoveStorageResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{32}
}

type QueryBlockHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number []byte `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *QueryBlockHash) Reset() {
	*x = QueryBlockHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBlockHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBlockHash) ProtoMessage() {}

func (x *QueryBlockHash) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBlockHash.ProtoReflect.Descriptor instead.
func (*QueryBlockHash) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{33}
}

func (x *QueryBlockHash) GetNumber() []byte {
	if x != nil {
		return x.Number
	}
	return nil
}

type QueryBlockHashResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *QueryBlockHashResponse) Reset() {
	*x = QueryBlockHashResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBlockHashResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBlockHashResponse) ProtoMessage() {}

func (x *QueryBlockHashResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBlockHashResponse.ProtoReflect.Descriptor instead.
func (*QueryBlockHashResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{34}
}

func (x *QueryBlockHashResponse) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type QueryIssuanceTreeRoot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryIssuanceTreeRoot) Reset() {
	*x = QueryIssuanceTreeRoot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIssuanceTreeRoot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIssuanceTreeRoot) ProtoMessage() {}

func (x *QueryIssuanceTreeRoot) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIssuanceTreeRoot.ProtoReflect.Descriptor instead.
func (*QueryIssuanceTreeRoot) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{35}
}

type QueryIssuanceTreeRootResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root []byte `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
}

func (x *QueryIssuanceTreeRootResponse) Reset() {
	*x = QueryIssuanceTreeRootResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIssuanceTreeRootResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIssuanceTreeRootResponse) ProtoMessage() {}

func (x *QueryIssuanceTreeRootResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIssuanceTreeRootResponse.ProtoReflect.Descriptor instead.
func (*QueryIssuanceTreeRootResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{36}
}

func (x *QueryIssuanceTreeRootResponse) GetRoot() []byte {
	if x != nil {
		return x.Root
	}
	return nil
}

type QueryRevocationTreeRoot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryRevocationTreeRoot) Reset() {
	*x = QueryRevocationTreeRoot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRevocationTreeRoot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRevocationTreeRoot) ProtoMessage() {}

func (x *QueryRevocationTreeRoot) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRevocationTreeRoot.ProtoReflect.Descriptor instead.
func (*QueryRevocationTreeRoot) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{37}
}

type QueryRevocationTreeRootResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root []byte `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
}

func (x *QueryRevocationTreeRootResponse) Reset() {
	*x = QueryRevocationTreeRootResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRevocationTreeRootResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRevocationTreeRootResponse) ProtoMessage() {}

func (x *QueryRevocationTreeRootResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRevocationTreeRootResponse.ProtoReflect.Descriptor instead.
func (*QueryRevocationTreeRootResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{38}
}

func (x *QueryRevocationTreeRootResponse) GetRoot() []byte {
	if x != nil {
		return x.Root
	}
	return nil
}

type QueryAddVerificationDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAddress          []byte `protobuf:"bytes,1,opt,name=userAddress,proto3" json:"userAddress,omitempty"`
	IssuerAddress        []byte `protobuf:"bytes,2,opt,name=issuerAddress,proto3" json:"issuerAddress,omitempty"`
	OriginChain          string `protobuf:"bytes,3,opt,name=originChain,proto3" json:"originChain,omitempty"`
	VerificationType     uint32 `protobuf:"varint,4,opt,name=verificationType,proto3" json:"verificationType,omitempty"`
	IssuanceTimestamp    uint32 `protobuf:"varint,5,opt,name=issuanceTimestamp,proto3" json:"issuanceTimestamp,omitempty"`
	ExpirationTimestamp  uint32 `protobuf:"varint,6,opt,name=expirationTimestamp,proto3" json:"expirationTimestamp,omitempty"`
	ProofData            []byte `protobuf:"bytes,7,opt,name=proofData,proto3" json:"proofData,omitempty"`
	Schema               string `protobuf:"bytes,8,opt,name=schema,proto3" json:"schema,omitempty"`
	IssuerVerificationId string `protobuf:"bytes,9,opt,name=issuerVerificationId,proto3" json:"issuerVerificationId,omitempty"`
	Version              uint32 `protobuf:"varint,10,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *QueryAddVerificationDetails) Reset() {
	*x = QueryAddVerificationDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAddVerificationDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAddVerificationDetails) ProtoMessage() {}

func (x *QueryAddVerificationDetails) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAddVerificationDetails.ProtoReflect.Descriptor instead.
func (*QueryAddVerificationDetails) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{39}
}

func (x *QueryAddVerificationDetails) GetUserAddress() []byte {
	if x != nil {
		return x.UserAddress
	}
	return nil
}

func (x *QueryAddVerificationDetails) GetIssuerAddress() []byte {
	if x != nil {
		return x.IssuerAddress
	}
	return nil
}

func (x *QueryAddVerificationDetails) GetOriginChain() string {
	if x != nil {
		return x.OriginChain
	}
	return ""
}

func (x *QueryAddVerificationDetails) GetVerificationType() uint32 {
	if x != nil {
		return x.VerificationType
	}
	return 0
}

func (x *QueryAddVerificationDetails) GetIssuanceTimestamp() uint32 {
	if x != nil {
		return x.IssuanceTimestamp
	}
	return 0
}

func (x *QueryAddVerificationDetails) GetExpirationTimestamp() uint32 {
	if x != nil {
		return x.ExpirationTimestamp
	}
	return 0
}

func (x *QueryAddVerificationDetails) GetProofData() []byte {
	if x != nil {
		return x.ProofData
	}
	return nil
}

func (x *QueryAddVerificationDetails) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *QueryAddVerificationDetails) GetIssuerVerificationId() string {
	if x != nil {
		return x.IssuerVerificationId
	}
	return ""
}

func (x *QueryAddVerificationDetails) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type QueryAddVerificationDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerificationId []byte `protobuf:"bytes,1,opt,name=verificationId,proto3" json:"verificationId,omitempty"`
}

func (x *QueryAddVerificationDetailsResponse) Reset() {
	*x = QueryAddVerificationDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAddVerificationDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAddVerificationDetailsResponse) ProtoMessage() {}

func (x *QueryAddVerificationDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAddVerificationDetailsResponse.ProtoReflect.Descriptor instead.
func (*QueryAddVerificationDetailsResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{40}
}

func (x *QueryAddVerificationDetailsResponse) GetVerificationId() []byte {
	if x != nil {
		return x.VerificationId
	}
	return nil
}

type QueryAddVerificationDetailsV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAddress          []byte `protobuf:"bytes,1,opt,name=userAddress,proto3" json:"userAddress,omitempty"`
	IssuerAddress        []byte `protobuf:"bytes,2,opt,name=issuerAddress,proto3" json:"issuerAddress,omitempty"`
	OriginChain          string `protobuf:"bytes,3,opt,name=originChain,proto3" json:"originChain,omitempty"`
	VerificationType     uint32 `protobuf:"varint,4,opt,name=verificationType,proto3" json:"verificationType,omitempty"`
	IssuanceTimestamp    uint32 `protobuf:"varint,5,opt,name=issuanceTimestamp,proto3" json:"issuanceTimestamp,omitempty"`
	ExpirationTimestamp  uint32 `protobuf:"varint,6,opt,name=expirationTimestamp,proto3" json:"expirationTimestamp,omitempty"`
	ProofData            []byte `protobuf:"bytes,7,opt,name=proofData,proto3" json:"proofData,omitempty"`
	Schema               string `protobuf:"bytes,8,opt,name=schema,proto3" json:"schema,omitempty"`
	IssuerVerificationId string `protobuf:"bytes,9,opt,name=issuerVerificationId,proto3" json:"issuerVerificationId,omitempty"`
	Version              uint32 `protobuf:"varint,10,opt,name=version,proto3" json:"version,omitempty"`
	UserPublicKey        []byte `protobuf:"bytes,11,opt,name=userPublicKey,proto3" json:"userPublicKey,omitempty"`
}

func (x *QueryAddVerificationDetailsV2) Reset() {
	*x = QueryAddVerificationDetailsV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAddVerificationDetailsV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAddVerificationDetailsV2) ProtoMessage() {}

func (x *QueryAddVerificationDetailsV2) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAddVerificationDetailsV2.ProtoReflect.Descriptor instead.
func (*QueryAddVerificationDetailsV2) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{41}
}

func (x *QueryAddVerificationDetailsV2) GetUserAddress() []byte {
	if x != nil {
		return x.UserAddress
	}
	return nil
}

func (x *QueryAddVerificationDetailsV2) GetIssuerAddress() []byte {
	if x != nil {
		return x.IssuerAddress
	}
	return nil
}

func (x *QueryAddVerificationDetailsV2) GetOriginChain() string {
	if x != nil {
		return x.OriginChain
	}
	return ""
}

func (x *QueryAddVerificationDetailsV2) GetVerificationType() uint32 {
	if x != nil {
		return x.VerificationType
	}
	return 0
}

func (x *QueryAddVerificationDetailsV2) GetIssuanceTimestamp() uint32 {
	if x != nil {
		return x.IssuanceTimestamp
	}
	return 0
}

func (x *QueryAddVerificationDetailsV2) GetExpirationTimestamp() uint32 {
	if x != nil {
		return x.ExpirationTimestamp
	}
	return 0
}

func (x *QueryAddVerificationDetailsV2) GetProofData() []byte {
	if x != nil {
		return x.ProofData
	}
	return nil
}

func (x *QueryAddVerificationDetailsV2) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *QueryAddVerificationDetailsV2) GetIssuerVerificationId() string {
	if x != nil {
		return x.IssuerVerificationId
	}
	return ""
}

func (x *QueryAddVerificationDetailsV2) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *QueryAddVerificationDetailsV2) GetUserPublicKey() []byte {
	if x != nil {
		return x.UserPublicKey
	}
	return nil
}

type QueryAddVerificationDetailsV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerificationId []byte `protobuf:"bytes,1,opt,name=verificationId,proto3" json:"verificationId,omitempty"`
}

func (x *QueryAddVerificationDetailsV2Response) Reset() {
	*x = QueryAddVerificationDetailsV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAddVerificationDetailsV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAddVerificationDetailsV2Response) ProtoMessage() {}

func (x *QueryAddVerificationDetailsV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAddVerificationDetailsV2Response.ProtoReflect.Descriptor instead.
func (*QueryAddVerificationDetailsV2Response) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{42}
}

func (x *QueryAddVerificationDetailsV2Response) GetVerificationId() []byte {
	if x != nil {
		return x.VerificationId
	}
	return nil
}

type QueryRevokeVerification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerificationId []byte `protobuf:"bytes,1,opt,name=verificationId,proto3" json:"verificationId,omitempty"`
}

func (x *QueryRevokeVerification) Reset() {
	*x = QueryRevokeVerification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRevokeVerification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRevokeVerification) ProtoMessage() {}

func (x *QueryRevokeVerification) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRevokeVerification.ProtoReflect.Descriptor instead.
func (*QueryRevokeVerification) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{43}
}

func (x *QueryRevokeVerification) GetVerificationId() []byte {
	if x != nil {
		return x.VerificationId
	}
	return nil
}

type QueryRevokeVerificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryRevokeVerificationResponse) Reset() {
	*x = QueryRevokeVerificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRevokeVerificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRevokeVerificationResponse) ProtoMessage() {}

func (x *QueryRevokeVerificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRevokeVerificationResponse.ProtoReflect.Descriptor instead.
func (*QueryRevokeVerificationResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{44}
}

type QueryHasVerification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAddress         []byte   `protobuf:"bytes,1,opt,name=userAddress,proto3" json:"userAddress,omitempty"`
	VerificationType    uint32   `protobuf:"varint,2,opt,name=verificationType,proto3" json:"verificationType,omitempty"`
	ExpirationTimestamp uint32   `protobuf:"varint,3,opt,name=expirationTimestamp,proto3" json:"expirationTimestamp,omitempty"`
	AllowedIssuers      [][]byte `protobuf:"bytes,4,rep,name=allowedIssuers,proto3" json:"allowedIssuers,omitempty"`
}

func (x *QueryHasVerification) Reset() {
	*x = QueryHasVerification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHasVerification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHasVerification) ProtoMessage() {}

func (x *QueryHasVerification) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHasVerification.ProtoReflect.Descriptor instead.
func (*QueryHasVerification) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{45}
}

func (x *QueryHasVerification) GetUserAddress() []byte {
	if x != nil {
		return x.UserAddress
	}
	return nil
}

func (x *QueryHasVerification) GetVerificationType() uint32 {
	if x != nil {
		return x.VerificationType
	}
	return 0
}

func (x *QueryHasVerification) GetExpirationTimestamp() uint32 {
	if x != nil {
		return x.ExpirationTimestamp
	}
	return 0
}

func (x *QueryHasVerification) GetAllowedIssuers() [][]byte {
	if x != nil {
		return x.AllowedIssuers
	}
	return nil
}

type QueryHasVerificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasVerification bool `protobuf:"varint,1,opt,name=hasVerification,proto3" json:"hasVerification,omitempty"`
}

func (x *QueryHasVerificationResponse) Reset() {
	*x = QueryHasVerificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHasVerificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHasVerificationResponse) ProtoMessage() {}

func (x *QueryHasVerificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHasVerificationResponse.ProtoReflect.Descriptor instead.
func (*QueryHasVerificationResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{46}
}

func (x *QueryHasVerificationResponse) GetHasVerification() bool {
	if x != nil {
		return x.HasVerification
	}
	return false
}

type QueryGetVerificationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAddress   []byte `protobuf:"bytes,1,opt,name=userAddress,proto3" json:"userAddress,omitempty"`
	IssuerAddress []byte `protobuf:"bytes,2,opt,name=issuerAddress,proto3" json:"issuerAddress,omitempty"`
}

func (x *QueryGetVerificationData) Reset() {
	*x = QueryGetVerificationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetVerificationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetVerificationData) ProtoMessage() {}

func (x *QueryGetVerificationData) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGetVerificationData.ProtoReflect.Descriptor instead.
func (*QueryGetVerificationData) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{47}
}

func (x *QueryGetVerificationData) GetUserAddress() []byte {
	if x != nil {
		return x.UserAddress
	}
	return nil
}

func (x *QueryGetVerificationData) GetIssuerAddress() []byte {
	if x != nil {
		return x.IssuerAddress
	}
	return nil
}

// VerificationDetails must have same members with VerificationDetails in "sgxvm/proto/ffi.proto"
// including verification type and verification id as key.
// But the member types can be different, such as string(address) to bytes
type VerificationDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Verification type
	VerificationType uint32 `protobuf:"varint,1,opt,name=verificationType,proto3" json:"verificationType,omitempty"`
	// Verification Id
	VerificationID []byte `protobuf:"bytes,2,opt,name=verificationID,proto3" json:"verificationID,omitempty"`
	// Verification issuer address
	IssuerAddress []byte `protobuf:"bytes,3,opt,name=issuerAddress,proto3" json:"issuerAddress,omitempty"`
	// From which chain proof was transferred
	OriginChain string `protobuf:"bytes,4,opt,name=originChain,proto3" json:"originChain,omitempty"`
	// Original issuance timestamp
	IssuanceTimestamp uint32 `protobuf:"varint,5,opt,name=issuanceTimestamp,proto3" json:"issuanceTimestamp,omitempty"`
	// Original expiration timestamp
	ExpirationTimestamp uint32 `protobuf:"varint,6,opt,name=expirationTimestamp,proto3" json:"expirationTimestamp,omitempty"`
	// Original proof data (ZK-proof)
	OriginalData []byte `protobuf:"bytes,7,opt,name=originalData,proto3" json:"originalData,omitempty"`
	// ZK-proof original schema
	Schema string `protobuf:"bytes,8,opt,name=schema,proto3" json:"schema,omitempty"`
	// Verification id for checking(KYC/KYB/AML etc) from issuer side
	IssuerVerificationId string `protobuf:"bytes,9,opt,name=issuerVerificationId,proto3" json:"issuerVerificationId,omitempty"`
	// Version
	Version uint32 `protobuf:"varint,10,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *VerificationDetails) Reset() {
	*x = VerificationDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationDetails) ProtoMessage() {}

func (x *VerificationDetails) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationDetails.ProtoReflect.Descriptor instead.
func (*VerificationDetails) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{48}
}

func (x *VerificationDetails) GetVerificationType() uint32 {
	if x != nil {
		return x.VerificationType
	}
	return 0
}

func (x *VerificationDetails) GetVerificationID() []byte {
	if x != nil {
		return x.VerificationID
	}
	return nil
}

func (x *VerificationDetails) GetIssuerAddress() []byte {
	if x != nil {
		return x.IssuerAddress
	}
	return nil
}

func (x *VerificationDetails) GetOriginChain() string {
	if x != nil {
		return x.OriginChain
	}
	return ""
}

func (x *VerificationDetails) GetIssuanceTimestamp() uint32 {
	if x != nil {
		return x.IssuanceTimestamp
	}
	return 0
}

func (x *VerificationDetails) GetExpirationTimestamp() uint32 {
	if x != nil {
		return x.ExpirationTimestamp
	}
	return 0
}

func (x *VerificationDetails) GetOriginalData() []byte {
	if x != nil {
		return x.OriginalData
	}
	return nil
}

func (x *VerificationDetails) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *VerificationDetails) GetIssuerVerificationId() string {
	if x != nil {
		return x.IssuerVerificationId
	}
	return ""
}

func (x *VerificationDetails) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type QueryGetVerificationDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*VerificationDetails `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryGetVerificationDataResponse) Reset() {
	*x = QueryGetVerificationDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetVerificationDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetVerificationDataResponse) ProtoMessage() {}

func (x *QueryGetVerificationDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGetVerificationDataResponse.ProtoReflect.Descriptor instead.
func (*QueryGetVerificationDataResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{49}
}

func (x *QueryGetVerificationDataResponse) GetData() []*VerificationDetails {
	if x != nil {
		return x.Data
	}
	return nil
}

type CosmosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Req:
	//
	//	*CosmosRequest_GetAccount
	//	*CosmosRequest_ContainsKey
	//	*CosmosRequest_AccountCode
	//	*CosmosRequest_CodeHash
	//	*CosmosRequest_CodeSize
	//	*CosmosRequest_StorageCell
	//	*CosmosRequest_InsertAccountCode
	//	*CosmosRequest_InsertStorageCell
	//	*CosmosRequest_Remove
	//	*CosmosRequest_RemoveStorageCell
	//	*CosmosRequest_RemoveStorage
	//	*CosmosRequest_BlockHash
	//	*CosmosRequest_AddVerificationDetails
	//	*CosmosRequest_HasVerification
	//	*CosmosRequest_GetVerificationData
	//	*CosmosRequest_InsertAccountBalance
	//	*CosmosRequest_InsertAccountNonce
	//	*CosmosRequest_IssuanceTreeRoot
	//	*CosmosRequest_RevocationTreeRoot
	//	*CosmosRequest_AddVerificationDetailsV2
	//	*CosmosRequest_RevokeVerification
	Req isCosmosRequest_Req `protobuf_oneof:"req"`
}

func (x *CosmosRequest) Reset() {
	*x = CosmosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosmosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosmosRequest) ProtoMessage() {}

func (x *CosmosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosmosRequest.ProtoReflect.Descriptor instead.
func (*CosmosRequest) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{50}
}

func (m *CosmosRequest) GetReq() isCosmosRequest_Req {
	if m != nil {
		return m.Req
	}
	return nil
}

func (x *CosmosRequest) GetGetAccount() *QueryGetAccount {
	if x, ok := x.GetReq().(*CosmosRequest_GetAccount); ok {
		return x.GetAccount
	}
	return nil
}

func (x *CosmosRequest) GetContainsKey() *QueryContainsKey {
	if x, ok := x.GetReq().(*CosmosRequest_ContainsKey); ok {
		return x.ContainsKey
	}
	return nil
}

func (x *CosmosRequest) GetAccountCode() *QueryGetAccountCode {
	if x, ok := x.GetReq().(*CosmosRequest_AccountCode); ok {
		return x.AccountCode
	}
	return nil
}

func (x *CosmosRequest) GetCodeHash() *QueryGetAccountCodeHash {
	if x, ok := x.GetReq().(*CosmosRequest_CodeHash); ok {
		return x.CodeHash
	}
	return nil
}

func (x *CosmosRequest) GetCodeSize() *QueryGetAccountCodeSize {
	if x, ok := x.GetReq().(*CosmosRequest_CodeSize); ok {
		return x.CodeSize
	}
	return nil
}

func (x *CosmosRequest) GetStorageCell() *QueryGetAccountStorageCell {
	if x, ok := x.GetReq().(*CosmosRequest_StorageCell); ok {
		return x.StorageCell
	}
	return nil
}

func (x *CosmosRequest) GetInsertAccountCode() *QueryInsertAccountCode {
	if x, ok := x.GetReq().(*CosmosRequest_InsertAccountCode); ok {
		return x.InsertAccountCode
	}
	return nil
}

func (x *CosmosRequest) GetInsertStorageCell() *QueryInsertStorageCell {
	if x, ok := x.GetReq().(*CosmosRequest_InsertStorageCell); ok {
		return x.InsertStorageCell
	}
	return nil
}

func (x *CosmosRequest) GetRemove() *QueryRemove {
	if x, ok := x.GetReq().(*CosmosRequest_Remove); ok {
		return x.Remove
	}
	return nil
}

func (x *CosmosRequest) GetRemoveStorageCell() *QueryRemoveStorageCell {
	if x, ok := x.GetReq().(*CosmosRequest_RemoveStorageCell); ok {
		return x.RemoveStorageCell
	}
	return nil
}

func (x *CosmosRequest) GetRemoveStorage() *QueryRemoveStorage {
	if x, ok := x.GetReq().(*CosmosRequest_RemoveStorage); ok {
		return x.RemoveStorage
	}
	return nil
}

func (x *CosmosRequest) GetBlockHash() *QueryBlockHash {
	if x, ok := x.GetReq().(*CosmosRequest_BlockHash); ok {
		return x.BlockHash
	}
	return nil
}

func (x *CosmosRequest) GetAddVerificationDetails() *QueryAddVerificationDetails {
	if x, ok := x.GetReq().(*CosmosRequest_AddVerificationDetails); ok {
		return x.AddVerificationDetails
	}
	return nil
}

func (x *CosmosRequest) GetHasVerification() *QueryHasVerification {
	if x, ok := x.GetReq().(*CosmosRequest_HasVerification); ok {
		return x.HasVerification
	}
	return nil
}

func (x *CosmosRequest) GetGetVerificationData() *QueryGetVerificationData {
	if x, ok := x.GetReq().(*CosmosRequest_GetVerificationData); ok {
		return x.GetVerificationData
	}
	return nil
}

func (x *CosmosRequest) GetInsertAccountBalance() *QueryInsertAccountBalance {
	if x, ok := x.GetReq().(*CosmosRequest_InsertAccountBalance); ok {
		return x.InsertAccountBalance
	}
	return nil
}

func (x *CosmosRequest) GetInsertAccountNonce() *QueryInsertAccountNonce {
	if x, ok := x.GetReq().(*CosmosRequest_InsertAccountNonce); ok {
		return x.InsertAccountNonce
	}
	return nil
}

func (x *CosmosRequest) GetIssuanceTreeRoot() *QueryIssuanceTreeRoot {
	if x, ok := x.GetReq().(*CosmosRequest_IssuanceTreeRoot); ok {
		return x.IssuanceTreeRoot
	}
	return nil
}

func (x *CosmosRequest) GetRevocationTreeRoot() *QueryRevocationTreeRoot {
	if x, ok := x.GetReq().(*CosmosRequest_RevocationTreeRoot); ok {
		return x.RevocationTreeRoot
	}
	return nil
}

func (x *CosmosRequest) GetAddVerificationDetailsV2() *QueryAddVerificationDetailsV2 {
	if x, ok := x.GetReq().(*CosmosRequest_AddVerificationDetailsV2); ok {
		return x.AddVerificationDetailsV2
	}
	return nil
}

func (x *CosmosRequest) GetRevokeVerification() *QueryRevokeVerification {
	if x, ok := x.GetReq().(*CosmosRequest_RevokeVerification); ok {
		return x.RevokeVerification
	}
	return nil
}

type isCosmosRequest_Req interface {
	isCosmosRequest_Req()
}

type CosmosRequest_GetAccount struct {
	GetAccount *QueryGetAccount `protobuf:"bytes,1,opt,name=getAccount,proto3,oneof"`
}

type CosmosRequest_ContainsKey struct {
	ContainsKey *QueryContainsKey `protobuf:"bytes,2,opt,name=containsKey,proto3,oneof"`
}

type CosmosRequest_AccountCode struct {
	AccountCode *QueryGetAccountCode `protobuf:"bytes,3,opt,name=accountCode,proto3,oneof"`
}

type CosmosRequest_CodeHash struct {
	CodeHash *QueryGetAccountCodeHash `protobuf:"bytes,4,opt,name=codeHash,proto3,oneof"`
}

type CosmosRequest_CodeSize struct {
	CodeSize *QueryGetAccountCodeSize `protobuf:"bytes,5,opt,name=codeSize,proto3,oneof"`
}

type CosmosRequest_StorageCell struct {
	StorageCell *QueryGetAccountStorageCell `protobuf:"bytes,6,opt,name=storageCell,proto3,oneof"`
}

type CosmosRequest_InsertAccountCode struct {
	InsertAccountCode *QueryInsertAccountCode `protobuf:"bytes,7,opt,name=insertAccountCode,proto3,oneof"`
}

type CosmosRequest_InsertStorageCell struct {
	InsertStorageCell *QueryInsertStorageCell `protobuf:"bytes,8,opt,name=insertStorageCell,proto3,oneof"`
}

type CosmosRequest_Remove struct {
	Remove *QueryRemove `protobuf:"bytes,9,opt,name=remove,proto3,oneof"`
}

type CosmosRequest_RemoveStorageCell struct {
	RemoveStorageCell *QueryRemoveStorageCell `protobuf:"bytes,10,opt,name=removeStorageCell,proto3,oneof"`
}

type CosmosRequest_RemoveStorage struct {
	RemoveStorage *QueryRemoveStorage `protobuf:"bytes,11,opt,name=removeStorage,proto3,oneof"`
}

type CosmosRequest_BlockHash struct {
	BlockHash *QueryBlockHash `protobuf:"bytes,12,opt,name=blockHash,proto3,oneof"`
}

type CosmosRequest_AddVerificationDetails struct {
	AddVerificationDetails *QueryAddVerificationDetails `protobuf:"bytes,13,opt,name=addVerificationDetails,proto3,oneof"`
}

type CosmosRequest_HasVerification struct {
	HasVerification *QueryHasVerification `protobuf:"bytes,14,opt,name=hasVerification,proto3,oneof"`
}

type CosmosRequest_GetVerificationData struct {
	GetVerificationData *QueryGetVerificationData `protobuf:"bytes,15,opt,name=getVerificationData,proto3,oneof"`
}

type CosmosRequest_InsertAccountBalance struct {
	InsertAccountBalance *QueryInsertAccountBalance `protobuf:"bytes,16,opt,name=insertAccountBalance,proto3,oneof"`
}

type CosmosRequest_InsertAccountNonce struct {
	InsertAccountNonce *QueryInsertAccountNonce `protobuf:"bytes,17,opt,name=insertAccountNonce,proto3,oneof"`
}

type CosmosRequest_IssuanceTreeRoot struct {
	IssuanceTreeRoot *QueryIssuanceTreeRoot `protobuf:"bytes,18,opt,name=issuanceTreeRoot,proto3,oneof"`
}

type CosmosRequest_RevocationTreeRoot struct {
	RevocationTreeRoot *QueryRevocationTreeRoot `protobuf:"bytes,19,opt,name=revocationTreeRoot,proto3,oneof"`
}

type CosmosRequest_AddVerificationDetailsV2 struct {
	AddVerificationDetailsV2 *QueryAddVerificationDetailsV2 `protobuf:"bytes,20,opt,name=addVerificationDetailsV2,proto3,oneof"`
}

type CosmosRequest_RevokeVerification struct {
	RevokeVerification *QueryRevokeVerification `protobuf:"bytes,21,opt,name=revokeVerification,proto3,oneof"`
}

func (*CosmosRequest_GetAccount) isCosmosRequest_Req() {}

func (*CosmosRequest_ContainsKey) isCosmosRequest_Req() {}

func (*CosmosRequest_AccountCode) isCosmosRequest_Req() {}

func (*CosmosRequest_CodeHash) isCosmosRequest_Req() {}

func (*CosmosRequest_CodeSize) isCosmosRequest_Req() {}

func (*CosmosRequest_StorageCell) isCosmosRequest_Req() {}

func (*CosmosRequest_InsertAccountCode) isCosmosRequest_Req() {}

func (*CosmosRequest_InsertStorageCell) isCosmosRequest_Req() {}

func (*CosmosRequest_Remove) isCosmosRequest_Req() {}

func (*CosmosRequest_RemoveStorageCell) isCosmosRequest_Req() {}

func (*CosmosRequest_RemoveStorage) isCosmosRequest_Req() {}

func (*CosmosRequest_BlockHash) isCosmosRequest_Req() {}

func (*CosmosRequest_AddVerificationDetails) isCosmosRequest_Req() {}

func (*CosmosRequest_HasVerification) isCosmosRequest_Req() {}

func (*CosmosRequest_GetVerificationData) isCosmosRequest_Req() {}

func (*CosmosRequest_InsertAccountBalance) isCosmosRequest_Req() {}

func (*CosmosRequest_InsertAccountNonce) isCosmosRequest_Req() {}

func (*CosmosRequest_IssuanceTreeRoot) isCosmosRequest_Req() {}

func (*CosmosRequest_RevocationTreeRoot) isCosmosRequest_Req() {}

func (*CosmosRequest_AddVerificationDetailsV2) isCosmosRequest_Req() {}

func (*CosmosRequest_RevokeVerification) isCosmosRequest_Req() {}

// Message with data required to execute `call` operation
type SGXVMCallParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From        []byte            `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To          []byte            `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Data        []byte            `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	GasLimit    uint64            `protobuf:"varint,4,opt,name=gasLimit,proto3" json:"gasLimit,omitempty"`
	GasPrice    []byte            `protobuf:"bytes,5,opt,name=gasPrice,proto3" json:"gasPrice,omitempty"`
	Value       []byte            `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	AccessList  []*AccessListItem `protobuf:"bytes,7,rep,name=accessList,proto3" json:"accessList,omitempty"`
	Commit      bool              `protobuf:"varint,8,opt,name=commit,proto3" json:"commit,omitempty"`
	Nonce       uint64            `protobuf:"varint,9,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Unencrypted bool              `protobuf:"varint,10,opt,name=unencrypted,proto3" json:"unencrypted,omitempty"`
}

func (x *SGXVMCallParams) Reset() {
	*x = SGXVMCallParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGXVMCallParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGXVMCallParams) ProtoMessage() {}

func (x *SGXVMCallParams) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGXVMCallParams.ProtoReflect.Descriptor instead.
func (*SGXVMCallParams) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{51}
}

func (x *SGXVMCallParams) GetFrom() []byte {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *SGXVMCallParams) GetTo() []byte {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *SGXVMCallParams) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SGXVMCallParams) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *SGXVMCallParams) GetGasPrice() []byte {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

func (x *SGXVMCallParams) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *SGXVMCallParams) GetAccessList() []*AccessListItem {
	if x != nil {
		return x.AccessList
	}
	return nil
}

func (x *SGXVMCallParams) GetCommit() bool {
	if x != nil {
		return x.Commit
	}
	return false
}

func (x *SGXVMCallParams) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *SGXVMCallParams) GetUnencrypted() bool {
	if x != nil {
		return x.Unencrypted
	}
	return false
}

// Message with data required to execute `create` operation
type SGXVMCreateParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From       []byte            `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Data       []byte            `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	GasLimit   uint64            `protobuf:"varint,3,opt,name=gasLimit,proto3" json:"gasLimit,omitempty"`
	GasPrice   []byte            `protobuf:"bytes,4,opt,name=gasPrice,proto3" json:"gasPrice,omitempty"`
	Value      []byte            `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	AccessList []*AccessListItem `protobuf:"bytes,6,rep,name=accessList,proto3" json:"accessList,omitempty"`
	Commit     bool              `protobuf:"varint,7,opt,name=commit,proto3" json:"commit,omitempty"`
	Nonce      uint64            `protobuf:"varint,8,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *SGXVMCreateParams) Reset() {
	*x = SGXVMCreateParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGXVMCreateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGXVMCreateParams) ProtoMessage() {}

func (x *SGXVMCreateParams) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGXVMCreateParams.ProtoReflect.Descriptor instead.
func (*SGXVMCreateParams) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{52}
}

func (x *SGXVMCreateParams) GetFrom() []byte {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *SGXVMCreateParams) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SGXVMCreateParams) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *SGXVMCreateParams) GetGasPrice() []byte {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

func (x *SGXVMCreateParams) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *SGXVMCreateParams) GetAccessList() []*AccessListItem {
	if x != nil {
		return x.AccessList
	}
	return nil
}

func (x *SGXVMCreateParams) GetCommit() bool {
	if x != nil {
		return x.Commit
	}
	return false
}

func (x *SGXVMCreateParams) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

// Request to execute `call` operation
type SGXVMCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params  *SGXVMCallParams    `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	Context *TransactionContext `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *SGXVMCallRequest) Reset() {
	*x = SGXVMCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGXVMCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGXVMCallRequest) ProtoMessage() {}

func (x *SGXVMCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGXVMCallRequest.ProtoReflect.Descriptor instead.
func (*SGXVMCallRequest) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{53}
}

func (x *SGXVMCallRequest) GetParams() *SGXVMCallParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *SGXVMCallRequest) GetContext() *TransactionContext {
	if x != nil {
		return x.Context
	}
	return nil
}

// Request to execute `create` operation
type SGXVMCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params  *SGXVMCreateParams  `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	Context *TransactionContext `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *SGXVMCreateRequest) Reset() {
	*x = SGXVMCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGXVMCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGXVMCreateRequest) ProtoMessage() {}

func (x *SGXVMCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGXVMCreateRequest.ProtoReflect.Descriptor instead.
func (*SGXVMCreateRequest) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{54}
}

func (x *SGXVMCreateRequest) GetParams() *SGXVMCreateParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *SGXVMCreateRequest) GetContext() *TransactionContext {
	if x != nil {
		return x.Context
	}
	return nil
}

// Request to obtain node public key
type NodePublicKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNumber uint64 `protobuf:"varint,1,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
}

func (x *NodePublicKeyRequest) Reset() {
	*x = NodePublicKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodePublicKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodePublicKeyRequest) ProtoMessage() {}

func (x *NodePublicKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodePublicKeyRequest.ProtoReflect.Descriptor instead.
func (*NodePublicKeyRequest) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{55}
}

func (x *NodePublicKeyRequest) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

// Response with node public key
type NodePublicKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey []byte `protobuf:"bytes,1,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
}

func (x *NodePublicKeyResponse) Reset() {
	*x = NodePublicKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodePublicKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodePublicKeyResponse) ProtoMessage() {}

func (x *NodePublicKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodePublicKeyResponse.ProtoReflect.Descriptor instead.
func (*NodePublicKeyResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{56}
}

func (x *NodePublicKeyResponse) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type EpochData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpochNumber   uint32 `protobuf:"varint,1,opt,name=epochNumber,proto3" json:"epochNumber,omitempty"`
	StartingBlock uint64 `protobuf:"varint,2,opt,name=startingBlock,proto3" json:"startingBlock,omitempty"`
	NodePublicKey []byte `protobuf:"bytes,3,opt,name=nodePublicKey,proto3" json:"nodePublicKey,omitempty"`
}

func (x *EpochData) Reset() {
	*x = EpochData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpochData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpochData) ProtoMessage() {}

func (x *EpochData) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpochData.ProtoReflect.Descriptor instead.
func (*EpochData) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{57}
}

func (x *EpochData) GetEpochNumber() uint32 {
	if x != nil {
		return x.EpochNumber
	}
	return 0
}

func (x *EpochData) GetStartingBlock() uint64 {
	if x != nil {
		return x.StartingBlock
	}
	return 0
}

func (x *EpochData) GetNodePublicKey() []byte {
	if x != nil {
		return x.NodePublicKey
	}
	return nil
}

type ListEpochsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epochs []*EpochData `protobuf:"bytes,1,rep,name=epochs,proto3" json:"epochs,omitempty"`
}

func (x *ListEpochsResponse) Reset() {
	*x = ListEpochsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEpochsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEpochsResponse) ProtoMessage() {}

func (x *ListEpochsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEpochsResponse.ProtoReflect.Descriptor instead.
func (*ListEpochsResponse) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{58}
}

func (x *ListEpochsResponse) GetEpochs() []*EpochData {
	if x != nil {
		return x.Epochs
	}
	return nil
}

type FFIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Req:
	//
	//	*FFIRequest_CallRequest
	//	*FFIRequest_CreateRequest
	//	*FFIRequest_PublicKeyRequest
	Req isFFIRequest_Req `protobuf_oneof:"req"`
}

func (x *FFIRequest) Reset() {
	*x = FFIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ffi_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FFIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FFIRequest) ProtoMessage() {}

func (x *FFIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ffi_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FFIRequest.ProtoReflect.Descriptor instead.
func (*FFIRequest) Descriptor() ([]byte, []int) {
	return file_ffi_proto_rawDescGZIP(), []int{59}
}

func (m *FFIRequest) GetReq() isFFIRequest_Req {
	if m != nil {
		return m.Req
	}
	return nil
}

func (x *FFIRequest) GetCallRequest() *SGXVMCallRequest {
	if x, ok := x.GetReq().(*FFIRequest_CallRequest); ok {
		return x.CallRequest
	}
	return nil
}

func (x *FFIRequest) GetCreateRequest() *SGXVMCreateRequest {
	if x, ok := x.GetReq().(*FFIRequest_CreateRequest); ok {
		return x.CreateRequest
	}
	return nil
}

func (x *FFIRequest) GetPublicKeyRequest() *NodePublicKeyRequest {
	if x, ok := x.GetReq().(*FFIRequest_PublicKeyRequest); ok {
		return x.PublicKeyRequest
	}
	return nil
}

type isFFIRequest_Req interface {
	isFFIRequest_Req()
}

type FFIRequest_CallRequest struct {
	CallRequest *SGXVMCallRequest `protobuf:"bytes,1,opt,name=callRequest,proto3,oneof"`
}

type FFIRequest_CreateRequest struct {
	CreateRequest *SGXVMCreateRequest `protobuf:"bytes,2,opt,name=createRequest,proto3,oneof"`
}

type FFIRequest_PublicKeyRequest struct {
	PublicKeyRequest *NodePublicKeyRequest `protobuf:"bytes,3,opt,name=publicKeyRequest,proto3,oneof"`
}

func (*FFIRequest_CallRequest) isFFIRequest_Req() {}

func (*FFIRequest_CreateRequest) isFFIRequest_Req() {}

func (*FFIRequest_PublicKeyRequest) isFFIRequest_Req() {}

var File_ffi_proto protoreflect.FileDescriptor

var file_ffi_proto_rawDesc = []byte{
	0x0a, 0x09, 0x66, 0x66, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x66, 0x66, 0x69,
	0x2e, 0x66, 0x66, 0x69, 0x22, 0x4c, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0xb4, 0x01, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a,
	0x0a, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x37, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x90, 0x02, 0x0a, 0x12, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67,
	0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x32,
	0x0a, 0x16, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x66, 0x65, 0x65,
	0x5f, 0x70, 0x65, 0x72, 0x5f, 0x67, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x50, 0x65, 0x72, 0x47,
	0x61, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x69, 0x6e,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x43, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x89, 0x01, 0x0a,
	0x18, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x74, 0x78, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x66, 0x69,
	0x2e, 0x66, 0x66, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x74, 0x78, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0a,
	0x74, 0x78, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x09, 0x74,
	0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x19, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x4c,
	0x6f, 0x67, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x6d,
	0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x6d,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64,
	0x22, 0x1d, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22,
	0x5b, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x26, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2b, 0x0a, 0x0f,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x49, 0x0a, 0x17, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x22, 0x4f, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0x0a, 0x17, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x21, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x36,
	0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x4c, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x43, 0x65, 0x6c, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x3a, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x65,
	0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x2f, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x31, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x33, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x35, 0x0a, 0x1f, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x22, 0x33, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x35, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x46, 0x0a, 0x16,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x20, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x65, 0x6c, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x20, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x65, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x15, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x65,
	0x6c, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x22, 0x20, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x28, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x2c, 0x0a, 0x16,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x17, 0x0a, 0x15, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x72, 0x65, 0x65, 0x52,
	0x6f, 0x6f, 0x74, 0x22, 0x33, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x73, 0x73, 0x75,
	0x61, 0x6e, 0x63, 0x65, 0x54, 0x72, 0x65, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x52,
	0x6f, 0x6f, 0x74, 0x22, 0x35, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x76, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x22, 0x97, 0x03, 0x0a, 0x1b, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0d, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2c, 0x0a, 0x11, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x69, 0x73, 0x73,
	0x75, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x30,
	0x0a, 0x13, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4d, 0x0a, 0x23, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0xbf, 0x03, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x56, 0x32, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12,
	0x2a, 0x0a, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x69,
	0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x30, 0x0a, 0x13, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6f, 0x66, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x24, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x4f, 0x0a, 0x25, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x64,
	0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x21, 0x0a, 0x1f, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbe, 0x01, 0x0a,
	0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x61, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x13, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0e, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x73, 0x22, 0x48, 0x0a,
	0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x61, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x68, 0x61, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x62, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x9b, 0x03, 0x0a, 0x13,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12,
	0x2c, 0x0a, 0x11, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x69, 0x73, 0x73, 0x75,
	0x61, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x30, 0x0a,
	0x13, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x32, 0x0a, 0x14, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x54, 0x0a, 0x20, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x66,
	0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xc9, 0x0c, 0x0a, 0x0d, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x0a, 0x67, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3d, 0x0a,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x40, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x48,
	0x00, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3e,
	0x0a, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x61,
	0x73, 0x68, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x3e,
	0x0a, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x47,
	0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x12, 0x4f, 0x0a, 0x11, 0x69, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x11, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x4f, 0x0a, 0x11, 0x69, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x43, 0x65, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x11, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x66, 0x69, 0x2e,
	0x66, 0x66, 0x69, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48,
	0x00, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x4f, 0x0a, 0x11, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x43, 0x65, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x11, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x12, 0x43, 0x0a, 0x0d, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x0d, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12,
	0x37, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x48, 0x00, 0x52, 0x09, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x5e, 0x0a, 0x16, 0x61, 0x64, 0x64, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66,
	0x66, 0x69, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00,
	0x52, 0x16, 0x61, 0x64, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x49, 0x0a, 0x0f, 0x68, 0x61, 0x73, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x48, 0x61, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x13, 0x67, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x58, 0x0a, 0x14, 0x69, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66,
	0x66, 0x69, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x14,
	0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x12, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x6e,
	0x63, 0x65, 0x48, 0x00, 0x52, 0x12, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x10, 0x69, 0x73, 0x73, 0x75,
	0x61, 0x6e, 0x63, 0x65, 0x54, 0x72, 0x65, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x72, 0x65, 0x65, 0x52, 0x6f,
	0x6f, 0x74, 0x48, 0x00, 0x52, 0x10, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x72,
	0x65, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x52, 0x0a, 0x12, 0x72, 0x65, 0x76, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x65, 0x65,
	0x52, 0x6f, 0x6f, 0x74, 0x48, 0x00, 0x52, 0x12, 0x72, 0x65, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x64, 0x0a, 0x18, 0x61, 0x64,
	0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x56, 0x32, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x66,
	0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x56, 0x32, 0x48, 0x00, 0x52, 0x18, 0x61, 0x64, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x56, 0x32,
	0x12, 0x52, 0x0a, 0x12, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66,
	0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x12, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x05, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x22, 0xa0, 0x02, 0x0a, 0x0f,
	0x53, 0x47, 0x58, 0x56, 0x4d, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x66, 0x69, 0x2e,
	0x66, 0x66, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x75, 0x6e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x75, 0x6e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x22, 0xf0,
	0x01, 0x0a, 0x11, 0x53, 0x47, 0x58, 0x56, 0x4d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08,
	0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x67, 0x61, 0x73, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x22, 0x7b, 0x0a, 0x10, 0x53, 0x47, 0x58, 0x56, 0x4d, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e,
	0x53, 0x47, 0x58, 0x56, 0x4d, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66,
	0x66, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x7f,
	0x0a, 0x12, 0x53, 0x47, 0x58, 0x56, 0x4d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x53,
	0x47, 0x58, 0x56, 0x4d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x66, 0x69, 0x2e,
	0x66, 0x66, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22,
	0x38, 0x0a, 0x14, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x35, 0x0a, 0x15, 0x4e, 0x6f, 0x64,
	0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x22, 0x79, 0x0a, 0x09, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a,
	0x0b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6e, 0x6f,
	0x64, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x40, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2a, 0x0a, 0x06, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x45, 0x70, 0x6f, 0x63,
	0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x73, 0x22, 0xe4, 0x01,
	0x0a, 0x0a, 0x46, 0x46, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0b,
	0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x53, 0x47, 0x58, 0x56,
	0x4d, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b,
	0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0d, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x66, 0x66, 0x69, 0x2e, 0x53, 0x47, 0x58,
	0x56, 0x4d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4b, 0x0a, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x66, 0x69,
	0x2e, 0x66, 0x66, 0x69, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x05, 0x0a,
	0x03, 0x72, 0x65, 0x71, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x47, 0x6d, 0x62, 0x48, 0x2f, 0x6c, 0x69, 0x62,
	0x72, 0x75, 0x73, 0x74, 0x67, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ffi_proto_rawDescOnce sync.Once
	file_ffi_proto_rawDescData = file_ffi_proto_rawDesc
)

func file_ffi_proto_rawDescGZIP() []byte {
	file_ffi_proto_rawDescOnce.Do(func() {
		file_ffi_proto_rawDescData = protoimpl.X.CompressGZIP(file_ffi_proto_rawDescData)
	})
	return file_ffi_proto_rawDescData
}

var file_ffi_proto_msgTypes = make([]protoimpl.MessageInfo, 60)
var file_ffi_proto_goTypes = []any{
	(*AccessListItem)(nil),                        // 0: ffi.ffi.AccessListItem
	(*TransactionData)(nil),                       // 1: ffi.ffi.TransactionData
	(*TransactionContext)(nil),                    // 2: ffi.ffi.TransactionContext
	(*HandleTransactionRequest)(nil),              // 3: ffi.ffi.HandleTransactionRequest
	(*HandleTransactionResponse)(nil),             // 4: ffi.ffi.HandleTransactionResponse
	(*Topic)(nil),                                 // 5: ffi.ffi.Topic
	(*Log)(nil),                                   // 6: ffi.ffi.Log
	(*QueryGetAccount)(nil),                       // 7: ffi.ffi.QueryGetAccount
	(*QueryGetAccountResponse)(nil),               // 8: ffi.ffi.QueryGetAccountResponse
	(*QueryInsertAccountBalance)(nil),             // 9: ffi.ffi.QueryInsertAccountBalance
	(*QueryInsertAccountBalanceResponse)(nil),     // 10: ffi.ffi.QueryInsertAccountBalanceResponse
	(*QueryInsertAccountNonce)(nil),               // 11: ffi.ffi.QueryInsertAccountNonce
	(*QueryInsertAccountNonceResponse)(nil),       // 12: ffi.ffi.QueryInsertAccountNonceResponse
	(*QueryContainsKey)(nil),                      // 13: ffi.ffi.QueryContainsKey
	(*QueryContainsKeyResponse)(nil),              // 14: ffi.ffi.QueryContainsKeyResponse
	(*QueryGetAccountStorageCell)(nil),            // 15: ffi.ffi.QueryGetAccountStorageCell
	(*QueryGetAccountStorageCellResponse)(nil),    // 16: ffi.ffi.QueryGetAccountStorageCellResponse
	(*QueryGetAccountCode)(nil),                   // 17: ffi.ffi.QueryGetAccountCode
	(*QueryGetAccountCodeResponse)(nil),           // 18: ffi.ffi.QueryGetAccountCodeResponse
	(*QueryGetAccountCodeSize)(nil),               // 19: ffi.ffi.QueryGetAccountCodeSize
	(*QueryGetAccountCodeSizeResponse)(nil),       // 20: ffi.ffi.QueryGetAccountCodeSizeResponse
	(*QueryGetAccountCodeHash)(nil),               // 21: ffi.ffi.QueryGetAccountCodeHash
	(*QueryGetAccountCodeHashResponse)(nil),       // 22: ffi.ffi.QueryGetAccountCodeHashResponse
	(*QueryInsertAccountCode)(nil),                // 23: ffi.ffi.QueryInsertAccountCode
	(*QueryInsertAccountCodeResponse)(nil),        // 24: ffi.ffi.QueryInsertAccountCodeResponse
	(*QueryInsertStorageCell)(nil),                // 25: ffi.ffi.QueryInsertStorageCell
	(*QueryInsertStorageCellResponse)(nil),        // 26: ffi.ffi.QueryInsertStorageCellResponse
	(*QueryRemove)(nil),                           // 27: ffi.ffi.QueryRemove
	(*QueryRemoveResponse)(nil),                   // 28: ffi.ffi.QueryRemoveResponse
	(*QueryRemoveStorageCell)(nil),                // 29: ffi.ffi.QueryRemoveStorageCell
	(*QueryRemoveStorageCellResponse)(nil),        // 30: ffi.ffi.QueryRemoveStorageCellResponse
	(*QueryRemoveStorage)(nil),                    // 31: ffi.ffi.QueryRemoveStorage
	(*QueryRemoveStorageResponse)(nil),            // 32: ffi.ffi.QueryRemoveStorageResponse
	(*QueryBlockHash)(nil),                        // 33: ffi.ffi.QueryBlockHash
	(*QueryBlockHashResponse)(nil),                // 34: ffi.ffi.QueryBlockHashResponse
	(*QueryIssuanceTreeRoot)(nil),                 // 35: ffi.ffi.QueryIssuanceTreeRoot
	(*QueryIssuanceTreeRootResponse)(nil),         // 36: ffi.ffi.QueryIssuanceTreeRootResponse
	(*QueryRevocationTreeRoot)(nil),               // 37: ffi.ffi.QueryRevocationTreeRoot
	(*QueryRevocationTreeRootResponse)(nil),       // 38: ffi.ffi.QueryRevocationTreeRootResponse
	(*QueryAddVerificationDetails)(nil),           // 39: ffi.ffi.QueryAddVerificationDetails
	(*QueryAddVerificationDetailsResponse)(nil),   // 40: ffi.ffi.QueryAddVerificationDetailsResponse
	(*QueryAddVerificationDetailsV2)(nil),         // 41: ffi.ffi.QueryAddVerificationDetailsV2
	(*QueryAddVerificationDetailsV2Response)(nil), // 42: ffi.ffi.QueryAddVerificationDetailsV2Response
	(*QueryRevokeVerification)(nil),               // 43: ffi.ffi.QueryRevokeVerification
	(*QueryRevokeVerificationResponse)(nil),       // 44: ffi.ffi.QueryRevokeVerificationResponse
	(*QueryHasVerification)(nil),                  // 45: ffi.ffi.QueryHasVerification
	(*QueryHasVerificationResponse)(nil),          // 46: ffi.ffi.QueryHasVerificationResponse
	(*QueryGetVerificationData)(nil),              // 47: ffi.ffi.QueryGetVerificationData
	(*VerificationDetails)(nil),                   // 48: ffi.ffi.VerificationDetails
	(*QueryGetVerificationDataResponse)(nil),      // 49: ffi.ffi.QueryGetVerificationDataResponse
	(*CosmosRequest)(nil),                         // 50: ffi.ffi.CosmosRequest
	(*SGXVMCallParams)(nil),                       // 51: ffi.ffi.SGXVMCallParams
	(*SGXVMCreateParams)(nil),                     // 52: ffi.ffi.SGXVMCreateParams
	(*SGXVMCallRequest)(nil),                      // 53: ffi.ffi.SGXVMCallRequest
	(*SGXVMCreateRequest)(nil),                    // 54: ffi.ffi.SGXVMCreateRequest
	(*NodePublicKeyRequest)(nil),                  // 55: ffi.ffi.NodePublicKeyRequest
	(*NodePublicKeyResponse)(nil),                 // 56: ffi.ffi.NodePublicKeyResponse
	(*EpochData)(nil),                             // 57: ffi.ffi.EpochData
	(*ListEpochsResponse)(nil),                    // 58: ffi.ffi.ListEpochsResponse
	(*FFIRequest)(nil),                            // 59: ffi.ffi.FFIRequest
}
var file_ffi_proto_depIdxs = []int32{
	0,  // 0: ffi.ffi.TransactionData.accessList:type_name -> ffi.ffi.AccessListItem
	1,  // 1: ffi.ffi.HandleTransactionRequest.tx_data:type_name -> ffi.ffi.TransactionData
	2,  // 2: ffi.ffi.HandleTransactionRequest.tx_context:type_name -> ffi.ffi.TransactionContext
	6,  // 3: ffi.ffi.HandleTransactionResponse.logs:type_name -> ffi.ffi.Log
	5,  // 4: ffi.ffi.Log.topics:type_name -> ffi.ffi.Topic
	48, // 5: ffi.ffi.QueryGetVerificationDataResponse.data:type_name -> ffi.ffi.VerificationDetails
	7,  // 6: ffi.ffi.CosmosRequest.getAccount:type_name -> ffi.ffi.QueryGetAccount
	13, // 7: ffi.ffi.CosmosRequest.containsKey:type_name -> ffi.ffi.QueryContainsKey
	17, // 8: ffi.ffi.CosmosRequest.accountCode:type_name -> ffi.ffi.QueryGetAccountCode
	21, // 9: ffi.ffi.CosmosRequest.codeHash:type_name -> ffi.ffi.QueryGetAccountCodeHash
	19, // 10: ffi.ffi.CosmosRequest.codeSize:type_name -> ffi.ffi.QueryGetAccountCodeSize
	15, // 11: ffi.ffi.CosmosRequest.storageCell:type_name -> ffi.ffi.QueryGetAccountStorageCell
	23, // 12: ffi.ffi.CosmosRequest.insertAccountCode:type_name -> ffi.ffi.QueryInsertAccountCode
	25, // 13: ffi.ffi.CosmosRequest.insertStorageCell:type_name -> ffi.ffi.QueryInsertStorageCell
	27, // 14: ffi.ffi.CosmosRequest.remove:type_name -> ffi.ffi.QueryRemove
	29, // 15: ffi.ffi.CosmosRequest.removeStorageCell:type_name -> ffi.ffi.QueryRemoveStorageCell
	31, // 16: ffi.ffi.CosmosRequest.removeStorage:type_name -> ffi.ffi.QueryRemoveStorage
	33, // 17: ffi.ffi.CosmosRequest.blockHash:type_name -> ffi.ffi.QueryBlockHash
	39, // 18: ffi.ffi.CosmosRequest.addVerificationDetails:type_name -> ffi.ffi.QueryAddVerificationDetails
	45, // 19: ffi.ffi.CosmosRequest.hasVerification:type_name -> ffi.ffi.QueryHasVerification
	47, // 20: ffi.ffi.CosmosRequest.getVerificationData:type_name -> ffi.ffi.QueryGetVerificationData
	9,  // 21: ffi.ffi.CosmosRequest.insertAccountBalance:type_name -> ffi.ffi.QueryInsertAccountBalance
	11, // 22: ffi.ffi.CosmosRequest.insertAccountNonce:type_name -> ffi.ffi.QueryInsertAccountNonce
	35, // 23: ffi.ffi.CosmosRequest.issuanceTreeRoot:type_name -> ffi.ffi.QueryIssuanceTreeRoot
	37, // 24: ffi.ffi.CosmosRequest.revocationTreeRoot:type_name -> ffi.ffi.QueryRevocationTreeRoot
	41, // 25: ffi.ffi.CosmosRequest.addVerificationDetailsV2:type_name -> ffi.ffi.QueryAddVerificationDetailsV2
	43, // 26: ffi.ffi.CosmosRequest.revokeVerification:type_name -> ffi.ffi.QueryRevokeVerification
	0,  // 27: ffi.ffi.SGXVMCallParams.accessList:type_name -> ffi.ffi.AccessListItem
	0,  // 28: ffi.ffi.SGXVMCreateParams.accessList:type_name -> ffi.ffi.AccessListItem
	51, // 29: ffi.ffi.SGXVMCallRequest.params:type_name -> ffi.ffi.SGXVMCallParams
	2,  // 30: ffi.ffi.SGXVMCallRequest.context:type_name -> ffi.ffi.TransactionContext
	52, // 31: ffi.ffi.SGXVMCreateRequest.params:type_name -> ffi.ffi.SGXVMCreateParams
	2,  // 32: ffi.ffi.SGXVMCreateRequest.context:type_name -> ffi.ffi.TransactionContext
	57, // 33: ffi.ffi.ListEpochsResponse.epochs:type_name -> ffi.ffi.EpochData
	53, // 34: ffi.ffi.FFIRequest.callRequest:type_name -> ffi.ffi.SGXVMCallRequest
	54, // 35: ffi.ffi.FFIRequest.createRequest:type_name -> ffi.ffi.SGXVMCreateRequest
	55, // 36: ffi.ffi.FFIRequest.publicKeyRequest:type_name -> ffi.ffi.NodePublicKeyRequest
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_ffi_proto_init() }
func file_ffi_proto_init() {
	if File_ffi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ffi_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AccessListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*TransactionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TransactionContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*HandleTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*HandleTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Topic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*QueryGetAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*QueryGetAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*QueryInsertAccountBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*QueryInsertAccountBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*QueryInsertAccountNonce); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*QueryInsertAccountNonceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*QueryContainsKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*QueryContainsKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*QueryGetAccountStorageCell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*QueryGetAccountStorageCellResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*QueryGetAccountCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*QueryGetAccountCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*QueryGetAccountCodeSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*QueryGetAccountCodeSizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*QueryGetAccountCodeHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*QueryGetAccountCodeHashResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*QueryInsertAccountCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*QueryInsertAccountCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*QueryInsertStorageCell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*QueryInsertStorageCellResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*QueryRemove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*QueryRemoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*QueryRemoveStorageCell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*QueryRemoveStorageCellResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*QueryRemoveStorage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*QueryRemoveStorageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*QueryBlockHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*QueryBlockHashResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*QueryIssuanceTreeRoot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*QueryIssuanceTreeRootResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*QueryRevocationTreeRoot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*QueryRevocationTreeRootResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*QueryAddVerificationDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*QueryAddVerificationDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*QueryAddVerificationDetailsV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*QueryAddVerificationDetailsV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*QueryRevokeVerification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*QueryRevokeVerificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*QueryHasVerification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*QueryHasVerificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*QueryGetVerificationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*VerificationDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*QueryGetVerificationDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*CosmosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*SGXVMCallParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*SGXVMCreateParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*SGXVMCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*SGXVMCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*NodePublicKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*NodePublicKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*EpochData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*ListEpochsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ffi_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*FFIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ffi_proto_msgTypes[50].OneofWrappers = []any{
		(*CosmosRequest_GetAccount)(nil),
		(*CosmosRequest_ContainsKey)(nil),
		(*CosmosRequest_AccountCode)(nil),
		(*CosmosRequest_CodeHash)(nil),
		(*CosmosRequest_CodeSize)(nil),
		(*CosmosRequest_StorageCell)(nil),
		(*CosmosRequest_InsertAccountCode)(nil),
		(*CosmosRequest_InsertStorageCell)(nil),
		(*CosmosRequest_Remove)(nil),
		(*CosmosRequest_RemoveStorageCell)(nil),
		(*CosmosRequest_RemoveStorage)(nil),
		(*CosmosRequest_BlockHash)(nil),
		(*CosmosRequest_AddVerificationDetails)(nil),
		(*CosmosRequest_HasVerification)(nil),
		(*CosmosRequest_GetVerificationData)(nil),
		(*CosmosRequest_InsertAccountBalance)(nil),
		(*CosmosRequest_InsertAccountNonce)(nil),
		(*CosmosRequest_IssuanceTreeRoot)(nil),
		(*CosmosRequest_RevocationTreeRoot)(nil),
		(*CosmosRequest_AddVerificationDetailsV2)(nil),
		(*CosmosRequest_RevokeVerification)(nil),
	}
	file_ffi_proto_msgTypes[59].OneofWrappers = []any{
		(*FFIRequest_CallRequest)(nil),
		(*FFIRequest_CreateRequest)(nil),
		(*FFIRequest_PublicKeyRequest)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ffi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   60,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ffi_proto_goTypes,
		DependencyIndexes: file_ffi_proto_depIdxs,
		MessageInfos:      file_ffi_proto_msgTypes,
	}.Build()
	File_ffi_proto = out.File
	file_ffi_proto_rawDesc = nil
	file_ffi_proto_goTypes = nil
	file_ffi_proto_depIdxs = nil
}
